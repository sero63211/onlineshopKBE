[{"/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/index.js":"1","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/reportWebVitals.js":"2","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/App.js":"3","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/ServiceApi/ServiceApi.js":"4","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/login/Login.js":"5","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Order/AdminOrders.js":"6","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Order/MyOrders.js":"7","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/Product.js":"8","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/RegisterForm/RegistrationForm.js":"9","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/login/InActive.js":"10","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Category/Category.js":"11","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Cart/AddToCartIcon.js":"12","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Order/MyOrderCard.js":"13","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/ProductAdd.js":"14","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/ProductAddButton.js":"15","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/StockCount.js":"16","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Cart/GridItem.js":"17","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Navbar/Navbar.js":"18","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/ProductReviews.js":"19"},{"size":670,"mtime":1695808890354,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1695808890355,"results":"22","hashOfConfig":"21"},{"size":2533,"mtime":1695808890348,"results":"23","hashOfConfig":"21"},{"size":1143,"mtime":1695808890348,"results":"24","hashOfConfig":"21"},{"size":5347,"mtime":1695808890352,"results":"25","hashOfConfig":"21"},{"size":7736,"mtime":1695808890350,"results":"26","hashOfConfig":"21"},{"size":6153,"mtime":1695808890350,"results":"27","hashOfConfig":"21"},{"size":27472,"mtime":1695808890350,"results":"28","hashOfConfig":"21"},{"size":7661,"mtime":1695808890351,"results":"29","hashOfConfig":"21"},{"size":1429,"mtime":1695808890351,"results":"30","hashOfConfig":"21"},{"size":9749,"mtime":1695808890349,"results":"31","hashOfConfig":"21"},{"size":7854,"mtime":1695808890348,"results":"32","hashOfConfig":"21"},{"size":8366,"mtime":1695808890350,"results":"33","hashOfConfig":"21"},{"size":8081,"mtime":1695808890350,"results":"34","hashOfConfig":"21"},{"size":303,"mtime":1695808890351,"results":"35","hashOfConfig":"21"},{"size":704,"mtime":1695808890351,"results":"36","hashOfConfig":"21"},{"size":4984,"mtime":1695808890349,"results":"37","hashOfConfig":"21"},{"size":14663,"mtime":1695808890349,"results":"38","hashOfConfig":"21"},{"size":3462,"mtime":1695808890351,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m3latz",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/index.js",[],"/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/reportWebVitals.js",[],"/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/App.js",["93","94"],"import React, {    } from \"react\";\n \nimport Login from \"./component/login/Login\";\nimport RegistrationForm from \"./component/RegisterForm/RegistrationForm\";\nimport Product from \"./component/Product/Product\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Route, Routes } from 'react-router-dom';\nimport MyOrders from \"./component/Order/MyOrders\"; \n  \nimport AddToCartIcon from \"./component/Cart/AddToCartIcon\";\n \n \n \n \n import axios from \"axios\";\n \n \nimport InActive from \"./component/login/InActive\";\nimport { url } from \"./ServiceApi/ServiceApi\";\nimport Category from \"./component/Category/Category\";\nimport AdminOrders from \"./component/Order/AdminOrders\";\n// import Category from \"./component/Category/Category\";\n \n\n\n\n\nexport default function App() {\n\n  const [cartCount, setCartCount] = React.useState();\n\n  function getCartCount(){\n    const data = {\n      \"userId\": localStorage.getItem(\"userId\"),\n      \"orderStatus\": \"ACTIVE\"\n    };\n    axios.post(url+'order/cart/data', data\n       // , { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n       , {})\n        .then(res => {\n   \n          {\n            \n           setCartCount( res.data.item.length);\n          }\n  \n  \n        })\n        .catch(e => {\n  \n          console.log(e.message);\n  \n        })\n  }\n\n\n  getCartCount();\n\n\n\n\n//   const ProtectedRoutes = ({auth}) => {\n    \n//     return (auth === true ? <Outlet /> : <Navigate to=\"/\" replace/>)\n// }\nconst theme = createTheme({\n  typography: {\n   \"fontFamily\": `Saira`,\n   \"fontSize\": '1.5 rem',\n   \"fontWeightLight\": 300,\n   \"fontWeightRegular\": 400,\n   \"fontWeight\": 700\n  }\n});\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n\n    \n    <Routes>\n    {/* <Route path='/' element={isAuth ? <Navigate to=\"/\" /> : <Login />} /> */}\n      <Route  path=\"/\" element={<Login/>} />\n      <Route path=\"/register\" element={<RegistrationForm/>} /> \n      <Route path=\"/home\" element={<Product setCartCount={setCartCount} />} />\n      <Route path=\"/category\" element={<Category/>} />\n      <Route path=\"/myorders\" element={<MyOrders setCartCount={setCartCount}/>}/>\n      <Route path=\"/mycart\" element={<AddToCartIcon setCartCount={setCartCount}/>}></Route>\n      <Route path=\"/noaccess\" element={<InActive/>}></Route>\n      <Route path=\"/orders\" element={<AdminOrders/>}></Route>\n     \n      \n     \n   \n      \n     \n    \n   \n        \n    </Routes>\n\n\n\n      \n       \n\n \n\n    </div>\n    </ThemeProvider>\n  );\n}\n\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/ServiceApi/ServiceApi.js",[],"/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/login/Login.js",["95","96"],"import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Snackbar from '@mui/material/Snackbar';\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n} from 'mdb-react-ui-kit';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Shopping from '../../images/logo_secure_cart.png';\nimport TextField from '@mui/material/TextField';\nimport { loginUser } from '../../ServiceApi/ServiceApi';\nimport './Login.css';\nexport default function Login() {\n  const navigate = useNavigate();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value)\n  }\n  const handlePassword = (e) => {\n    setPassword(e.target.value)\n  }\n  const handlesignup = (e) => {\n    navigate('/register');\n  }\n  //const emailPattern = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n  //const passwordPattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[a-zA-Z]).{8,}$/;\n  const [message, setmessage] = useState('');\n  const handleApi = () => {\n\n    if (!email || !password) {\n      setmessage('Fields cannot be blank!');\n      setOpen(true);\n      return;\n    }\n    // if (!emailPattern.test(email)) {\n    //   setmessage('Please enter a valid email address');\n    //   setOpen(true);\n    //   return;\n    // }\n    // if (!passwordPattern.test(password)) {\n    //   setmessage('Password must be at least 8 characters long and contain  one lowercase letter, and one number');\n    //   setOpen(true);\n    //   return;\n    // }\n\n\n    loginUser(email, password).then(result => {\n      setOpen(true);\n      setmessage('login successfully');\n      localStorage.setItem('Token', result.data.token);\n      localStorage.setItem('username', result.data.firstName + \" \" + result.data.lastName);\n      localStorage.setItem('email', result.data.email);\n      localStorage.setItem('roles', result.data.roles);\n      localStorage.setItem('userId', result.data.id);\n      navigate('/home');\n      // if (localStorage.getItem('Token') !== \"\" && result.data.status===\"APPROVED\") {\n      //   navigate('/home');\n      // } else if (localStorage.getItem('Token') !== \"\" && result.data.status===\"PENDING\") {\n      //   navigate('/noaccess');\n      // }\n      // else {\n      //   return navigate('/');\n      // }\n    })\n      .catch(error => {\n        console.log(error);\n        setOpen(true);\n        setmessage('Incorrect Email or Password');\n        setEmail('')\n        setPassword('')\n        console.log(error)\n      })\n  }\n\n\n\n\n  return (\n    <div className=\"App\" style={{height:'100%'}}>\n      <MDBContainer style={{ backgroundColor: 'aliceblue', minHeight:'calc(100vh - 1px)' }}>\n        <MDBRow className='d-flex justify-content-center align-items-center h-100'>\n          <MDBCol col='12'>\n            <MDBCard className='my-2 mx-auto t-3' style={{ borderRadius: '1rem', top:'30px', maxWidth: '500px' }}>\n              <MDBCardBody className='w-100 d-flex flex-column' >\n                <div style={{ textAlign: 'center', padding: '0px 30px 0px 30px' }}>\n                  <img style={{ height: 130, width: 130, cursor: 'pointer' }} className='text-center' src={Shopping} />\n                  <h5 className=\"fw-bold text-center\">Sign in here</h5>\n                  {/* <label class=\"form-label\" for=\"typeEmailX-2\">Email</label>\n        <input value={email} onChange={handleEmail} type=\"email\" id=\"typeEmailX-2\" class=\"form-control form-control-lg\" /> */}\n                  <TextField\n                    style={{ marginTop: 20 }}\n                    fullWidth\n                    label=\"Email\"\n                    size='small'\n                    value={email}\n                    onChange={handleEmail}\n                  />\n\n                  <TextField fullWidth \n                      style={{ marginTop: 25, marginBottom: 20 }} \n                      size='small' type={'password'} \n                      label={'Password'} \n                      id=\"margin-dense\" margin=\"dense\" \n                      value={password} \n                      onChange={handlePassword} \n                    />\n\n\n                  <Button variant=\"contained\" size='small' style={{ width: '60%' }} onClick={handleApi} >Login</Button>\n\n                  <p sx={{ marginTop: 2 }}> Don't have a account? <a style={{ color: 'blue', cursor: 'pointer', textDecoration: 'none' }} onClick={handlesignup}>Register</a>\n                  </p>\n\n                </div>\n\n\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        action={action}\n      />\n\n    </div>\n  );\n}","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Order/AdminOrders.js",["97","98","99","100","101","102","103","104","105"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n// import MyOrderCard from \"./MyOrderCard\";\nimport orderEmpty from '../../images/order_empty.jpg';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Navbar from \"../Navbar/Navbar\";\nimport { url } from \"../../ServiceApi/ServiceApi\";\nimport { Avatar, Box } from \"@mui/material\";\nimport moment from \"moment/moment\";\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\nfunction AdminOrders() {\n  const [order, setorder] = useState();\n  function orderlist() {\n    axios.get(url + 'order'\n      //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n      , {})\n      .then(res => {\n        console.log(res.data);\n        setorder(res.data);\n      })\n      .catch(e => {\n        console.log(e);\n      })\n  }\n\n  useEffect(() => {\n    orderlist();\n  }, []);\n\n  return (\n    <div>\n      <Navbar\n      />\n      <br />\n      <br />\n      <br />\n      <br />\n      \n     \n      \n      {order ? (\n        order.map(each => (\n          <>\n          <Card style={{ padding: '10px', backgroundColor: 'aliceblue', width: '90%' }}>\n            {\n              each ? (\n                <div>\n                  <Typography style={{ flexDirection: 'row', display: 'flex', alignItems: \"center\" }}>\n                    {\n                      each.user.profilePicture ? (\n                        <>\n                          <Avatar src={each.user.profilePicture} style={{ width: \"60px\", height: '60px' }}>\n                            <img height={60} width={60} src={'data:image/png;base64,' + each.user.profilePicture} />\n                          </Avatar>\n                          &nbsp;<Typography style={{ float: 'left' }}>{each.user.firstName} {each.user.lastName}</Typography>\n\n                        </>\n                      ) : (\n                        <>\n                          <Avatar src={each.user.profilePicture} style={{ width: \"60px\", height: '60px' }}>\n                          </Avatar>\n                          &nbsp;<Typography style={{ float: 'left' }}>{each.user.firstName} {each.user.lastName}</Typography>\n                        </>\n                      )\n\n\n                    }\n\n                    <Typography variant=\"subtitle1\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>at&nbsp;{moment(each.dateTime).format(\"DD-MM-YYYY HH:mm:ss\")}</i> </Typography>\n\n                  </Typography>\n\n                  <Grid container>\n                    <Grid md={6}>\n                      <Card style={{padding:'20px'}}>\n                      <Box style={{padding:'20px'}}>\n                    <Typography fontFamily={\"Saira\"} fontWeight={700}>ADDRESS:</Typography> \n                    <Typography fontFamily={\"Saira\"} fontWeight={500}>{each.user.street}</Typography> \n                    <Typography fontFamily={\"Saira\"} fontWeight={500}>{each.user.city}</Typography> \n                    <Typography fontFamily={\"Saira\"} fontWeight={500}>{each.user.state}</Typography> \n                    <Typography fontFamily={\"Saira\"} fontWeight={500}>{each.user.country}</Typography>\n                    </Box>\n                    <Box style={{padding:'20px'}}>\n                    <Typography fontFamily={\"Saira\"} fontWeight={700}>PAYMENTS:</Typography> \n                    <Typography fontFamily={\"Saira\"} fontWeight={500}>{each.orderPayment.referenceNumber}</Typography> \n                    <Typography fontFamily={\"Saira\"} fontWeight={500}>{each.orderPayment.paymentOption}</Typography> \n                    </Box>\n                    </Card>\n                    </Grid>\n\n                    <Grid md={6}>\n                      {\n                        each.cart.item.map((eitem, ind) => (\n                          <>\n\n                            <Card key={ind} style={{ padding: '20px', margin: '10px' }}>\n                              <Grid container>\n                                <Grid md={4}>\n                                  <div className=\"product-image\">\n                                    <img src={\"data:image/png;base64,\" + eitem.product.imageData} style={{ width: '120px', height: '120px', verticalAlign: 'middle', borderRadius: 4 }} />\n                                    <Typography fontFamily={\"Saira\"} fontWeight={700}>{eitem.product.productName}</Typography>\n                                  </div>\n                                </Grid>\n\n                                <Grid md={8}>\n                                  <table style={{ borderStyle: 'groove', marginTop: '0px', width: '100%' }}>\n                                    <tbody>\n                                      <tr>\n                                        <td>\n                                          <Typography>QUANTITY</Typography>\n                                        </td>\n                                        <td>\n                                          <Typography>{eitem.quantity}</Typography>\n                                        </td>\n                                      </tr>\n                                      <tr>\n                                        <td>\n                                          <Typography>PRICE:</Typography>\n                                        </td>\n                                        <td>\n                                          <Typography> $ {eitem.totalPrice}</Typography>\n                                        </td>\n                                      </tr>\n                                      <tr>\n                                        <td>\n                                          <Typography>SELLER:</Typography>\n                                        </td>\n                                        <td>\n                                          <Typography> {eitem.product.seller.firstName} {eitem.product.seller.lastName}</Typography>\n                                        </td>\n                                      </tr>\n\n                                      {/* <tr>\n                                <td>\n                                <Typography>PAYMENT STATUS:</Typography>\n                                </td>\n                                <td>\n                                <Typography> {eitem.isPaymentDone}</Typography>\n                                </td>\n                              </tr> */}\n                                    </tbody>\n                                  </table>\n                                </Grid>\n                              </Grid>\n                            </Card>  <br></br>\n                          </>\n                        ))\n                      }\n\n                    </Grid>\n\n\n                  </Grid>\n\n\n\n\n\n                </div>\n              ) : \"\"\n            }\n          </Card><br></br>\n          </>\n        )\n        )\n      ) : <CircularProgress />\n      }\n      <br></br>\n    </div>\n  )\n}\nexport default AdminOrders\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Order/MyOrders.js",["106","107","108","109","110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport MyOrderCard from \"./MyOrderCard\";\nimport orderEmpty from '../../images/order_empty.jpg';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton'; \nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Navbar from \"../Navbar/Navbar\";\nimport { url } from \"../../ServiceApi/ServiceApi\";\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\nfunction MyOrders(cartCount1) {\n  const [expanded, setExpanded] = React.useState(true);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const [isTrue, setIsTrue] = useState();\n  const [isTrue1, setIsTrue1] = useState(\"\");\n  const [order, setorder] = useState([]);\n  const [totalAmount, setTotalAmount] = useState();\n  const data = {\n    \"userId\": localStorage.getItem(\"userId\"),\n    \"orderStatus\": \"ACTIVE\"\n  };\n  const [cartCount, setCartCount] = React.useState();\n const [item, setitem] = useState([]);\n const[dateTime, setDateTime] = useState();\n const[totalAmount1, setTotalAmount1] = useState(0);\n  function orderlist() {\n    axios.get(url+'order/'+ localStorage.getItem('userId')\n    //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n    , {})\n    .then(res => {\n      if(res.data==0){\n        setIsTrue(orderEmpty);\n          setIsTrue1(\"Your order list is currently empty.\");\n      }\n      setorder(res.data);\n      setTotalAmount(res.data.totalAmount);\n      for(var i = 0; i<order.length; i++){\n          setitem(order[0].cart.item)\n           setDateTime(order[0].dateTime);\n          setTotalAmount1(order[0].totalAmount);\n      }\n    })\n    .catch(e => {\n      console.log(e);\n    })\n  }\n  useEffect(() => {\n    orderlist();\n  }, []);\n  axios.post(url+'order/cart/data', data\n  //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n  , {})\n  .then(res => {\n    {\n      setCartCount(res.data.item.length);\n    }\n  })\n  .catch(e => {\n    console.log(e.message);\n  });\n  const handleVariableChange = (receivedVariable) => {\n    setDateTime(receivedVariable); \n    console.log(receivedVariable);\n    // Do something with the receivedVariable in the parent component\n  };\n  return (\n    <div>\n      <Navbar \n      itemCount2 = {cartCount}\n      />\n      <br />\n      <br />\n      <br />\n      <h2 className=\"text-charcoal d-none d-sm-block\">Your Orders</h2>\n      <Card   style={{ marginBottom: '20px', maxWidth: '80%', marginLeft: '8%', backgroundColor:'#f1f2e1' }}>\n      <CardHeader\n         title=\"Your recent orders\" >\n      </CardHeader>\n      <CardContent>\n          <Typography>\n            Thank you for placing an order with <b>Online shop</b>. We appreciate your business! Below, you will find the order details for your reference:\n\n          </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <ExpandMore\n          expand={expanded}\n          onClick={handleExpandClick} \n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n        { order.map((e, index) => ( \n<>\n       <MyOrderCard onVariableChange={handleVariableChange} item={e.cart.item}  dateTime={e.dateTime} totalAmount={e.totalAmount}/>\n        </>\n))} \n        </CardContent>\n      </Collapse>\n    </Card>\n      {/* <MyOrderCard item={item}  dateTime={dateTime} totalAmount={totalAmount1}/> */}\n      <div style={{display: \"flex\", alignItems:\"center\", justifyContent:'center', height:100, marginTop:70 }}>\n           <img height={200}     src={isTrue}/>\n           </div>\n             <p style={{display: \"flex\", alignItems:\"center\", justifyContent:'center', paddingTop:59, fontSize:20}}><b>{isTrue1}</b></p>\n    {/* {orderInfo ?  <NotFound/> : null} */}\n    {/* \n    <Paper\n          sx={{\n            p: 2,\n            margin: 'auto',\n            maxWidth: 500,\n            flexGrow: 1,\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n          }}\n        >\n          <Grid container spacing={2}> \n          {/* productImage, productName, quantity, price, totalprice, dateTime, totalAmount */}\n            {/* <p>{e.dateTime}</p>\n            <p>{e.totalAmount}</p>\n              {e.cart.item.map((a, index) => (   \n                <>\n          <Grid item xs={6}> \n          <ButtonBase sx={{ width: 128, height: 128 }}>\n          <Img alt=\"complex\" src={'data:image/png;base64,' + a.product.productImage.imageData} />\n        </ButtonBase> \n        </Grid>\n        <Grid item xs={6}> \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                  {a.product.productName}  <br />   {a.product.price}X{a.quantity}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                <span>&#x20B9;</span>&nbsp;  {totalAmount}\n                </Typography>\n                </Grid>\n                  </>\n              ))}        \n            </Grid>\n        </Paper>\n        <br></br></>\n    ))} \n       */}\n  {/* <Navbar itemCount2={<CartCount/>}/> */}\n    </div>\n  )\n}\nexport default MyOrders\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/Product.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"// import ReactDOM from \"react-dom\";\nimport React, { useState, useEffect, useTransition } from \"react\";\nimport axios from \"axios\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Chip, Icon, InputAdornment, Rating } from '@mui/material';\nimport '../Product/ProductCSS/SearchBox.css'\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport { styled } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport '../Product/ProductCSS/Product.css';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport ProductAdd from \"./ProductAdd\";\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ProductAddButton from './ProductAddButton';\nimport StockCount from \"./StockCount\";\nimport Navbar from \"../Navbar/Navbar\";\nimport { url } from \"../../ServiceApi/ServiceApi\";\n \n \nconst DialogAddSlot = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    padding: theme.spacing(2),\n    minWidth: '900px !important',\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function Product() {\n  const [cartCount, setCartCount] = React.useState();\nconsole.log(cartCount);\n  const isLoggedIn = localStorage.getItem('roles') == 'seller';\n  const isadminlogin1 = localStorage.getItem('roles') == 'admin';\n  const [currUser, SetCurrUser] = React.useState();\n  const [profileEditOpen, setProfileEditOpen] = React.useState(false);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  const [editopen, seteditOpen] = React.useState(false);\n  const [cartOpen, setcartOpen] = React.useState(false);\n  const [totalCartOpen, settotalCartOpen] = React.useState(false);\n  const handleCartOpen = (id) => {\n    setItemproductId(id)\n    setcartOpen(true);\n  }\n  const handleClickOpen = () => {\n    setOpen(!open);\n    if (open === true) {\n      axios.get(api\n        //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n        , {})\n        .then(res => {\n          setproduct(res.data);\n        })\n        .catch(e => {\n        })\n    }\n  };\n  const handleClose = () => {\n    handleClickOpen();\n    setproductName('');\n    setDescription('');\n    setprice('');\n    setstock('');\n    setunit('');\n    setSelectedOption('');\n  };\n  const handleCartClose = () => {\n    setcartOpen(false);\n  };\n \n  const handleTotalCartClose = () => {\n    settotalCartOpen(false);\n  };\n  const handleClose2 = () => {\n    seteditOpen(false);\n    setproductName('');\n    setDescription('');\n    setprice('');\n    setstock('');\n    setunit('');\n    setSelectedOption('');\n  };\n \n  //  style for edit delte button\n  const CustomButton = styled(Button)({\n    backgroundColor: '#063970',\n    border: 0,\n    borderRadius: 40,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    height: 30,\n    width: 80,\n  });\n  const [searchValue, setsearchValue] = useState('');\n  const handleSearchValue = (e) => {\n    setsearchValue(e.target.value)\n  }\n\n  const handleProfileEditClose = () => {\n    setProfileEditOpen(false);\n  }\n\n  const [products, setproduct] = useState([]);\n\n  function getUserDetails (){\n    axios.get(url+'user/'+localStorage.getItem(\"userId\")\n    , {})\n    //,{ headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n    .then(res => {\n      SetCurrUser(res.data);\n      if(res.data.role===\"buyer\" && (res.data.street===null || res.data.city===null\n       || res.data.state===null || res.data.country===null)){\n          setProfileEditOpen(true);\n      }\n\n      if(res.data.role===\"seller\" && (res.data.bankName===null || res.data.bankAccount===null)){\n           setProfileEditOpen(true);\n       }\n    })\n    .catch(e => {\n\n      console.log(e.response.data.message);\n    })\n  }\n  \n\n  \n\n  const api = url+'product/search?productName='+searchValue+'&userId='+localStorage.getItem('userId')\n  useEffect(() => {\n    getUserDetails ();\n    getAllProducts();\n    getCartCount();\n    if(isLoggedIn){\n    const apic = url+'product/category/ordercategory/'+ localStorage.getItem('userId')\n    axios.get(apic\n      , {})\n      //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n      .then(res => {\n        setcategory1(res.data);\n      })\n      .catch(e => {\n        console.log(e.message);\n      })\n    }\n  }, [searchValue]);\n  const [category1, setcategory1] = useState([]);\n  function getAllProducts() {\n    axios.get(api\n      , {})\n      //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n      .then(res => {\n        setproduct(res.data);\n      })\n      .catch(e => {\n      })\n  }\n  function getCartCount(){\n    const data = {\n      \"userId\": localStorage.getItem(\"userId\"),\n      \"orderStatus\": \"ACTIVE\"\n    };\n    axios.post(url+'order/cart/data', data\n    , {})\n        //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n        .then(res => {\n          {\n            console.log(\"------\", res.data.item.length);\n           setCartCount( res.data.item.length);\n          }\n        })\n        .catch(e => {\n          console.log(e.message);\n        })\n  }\n  /*  Add New Product      */\n  const [snackopen, setsnackOpen] = React.useState(false);\n  const [message, setmessage] = useState('');\n  const handleClose1 = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setsnackOpen(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose1}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  const [file, setFile] = useState(null);\n  const [productName, setproductName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setprice] = useState('');\n  const [stock, setstock] = useState(100);\n  const [unit, setunit] = useState('');\n const handlePriceChange = (event) => {\n    const inputValue = event.target.value;\n    // Allow only numbers and a dot (for decimal places)\n    const numericValue = inputValue.replace(/[^0-9.]/g, '');\n    // Update the state with the numeric value\n    setprice(numericValue);\n }\n const handleStockChange = (event) => {\n  const stockValue = event.target.value;\n  // Allow only numbers and a dot (for decimal places)\n  const numericStockValue = stockValue.replace(/[^0-9.]/g, '');\n  // Update the state with the numeric value\n  setstock(numericStockValue);\n}\n  const handleSubmit = () => {\n    \n    const formData = new FormData();\n    if (!file) {\n      setmessage('Please upload product image');\n      setsnackOpen(true);\n      return;\n    }\n    if (!productName) {\n      setmessage('Product is name is required');\n      setsnackOpen(true);\n      return;\n    }\n    if (!stock) {\n      setmessage('Please Enter the Stock');\n      setsnackOpen(true);\n      return;\n    }\n    if (!unit) {\n      setmessage('which type of product you add. Please add unit of product');\n      setsnackOpen(true);\n      return;\n    }\n    if (!selectedOption) {\n      setmessage('Choose category in your product');\n      setsnackOpen(true);\n      return;\n    }\n    if (!price) {\n      setmessage('Please Enter the procut price');\n      setsnackOpen(true);\n      return;\n    }\n    console.log(\"ADD PRODUCt data ok, needs to send to backend\");\n    formData.append('imagefile', file);\n    formData.append('data', JSON.stringify({\n      \"productName\": productName,\n      \"description\": description,\n      \"stock\": stock,\n      \"unit\": unit,\n      \"categoryId\": selectedOption,\n      \"price\": price,\n      \"userId\": localStorage.getItem('userId')\n    }))\n    axios.post(url+'product', formData\n    , {\n      headers: {\n        //Authorization: `Bearer ${localStorage.getItem('Token')}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    //, {})\n      .then((response) => {\n        console.log(response);\n        setmessage('Product added and waiting for admin approval');\n        setproductName('');\n        setDescription('');\n        setprice('');\n        setstock('');\n        setunit('');\n        setSelectedOption('');\n        handleClickOpen();\n      })\n      .catch((error) => {\n        console.log(error);\n        setmessage(error.response.data.message);\n        setproductName('');\n        setDescription('');\n        setprice('');\n        setstock('');\n        setunit('');\n        setSelectedOption('');\n      });\n  };\n  /************  get by id for update in product   **&&&&&&&&&&&********/\n  const [updateproductName, setupdateproductName] = useState('');\n  const [updateDescription, setupdateDescription] = useState('');\n  const [updateprice, setupdatetprice] = useState('');\n  const [updatestock, setupdatestock] = useState(100);\n  const [updateunit, setupdateunit] = useState('');\n  const [updateCategory, setupdateCategory] = useState();\n  const [imageId, setimageId] = useState();\n  const [updatefile, setupdateFile] = useState(null);\n  const [productId, setproductId] = useState('');\n  const [updateCategoryId, setupdateCategoryId] = useState();\n  const handleDelete = (id) => {\n    axios.delete(url+'product/' + id +'/'+localStorage.getItem('userId')\n    // , {\n    //   headers: {\n    //     Authorization: `Bearer ${localStorage.getItem('Token')}`\n    //   }\n    // })\n    , {})\n      .then((res, status) => {\n        console.log(res.data, status);\n        getAllProducts();\n      })\n      .catch((error) => {\n        setsnackOpen(true);\n        setmessage(error.response.data.message);\n        setOpen(false);\n      });\n  }\n  const handleEdit = (id) => {\n    seteditOpen(true);\n    axios.get(url+'product/' + id\n    // , {\n    //   headers: {\n    //     Authorization: `Bearer ${localStorage.getItem('Token')}`\n    //   }\n    // })\n    , {})\n      .then((res) => {\n        setproductId(res.data.productId);\n        setupdateproductName(res.data.productName);\n        setupdateDescription(res.data.description);\n        setupdatetprice(res.data.price);\n        setupdatestock(res.data.stocks);\n        setupdateunit(res.data.unit);\n        setupdateCategoryId(res.data.category.categoryId);\n        setupdateCategory(res.data.category.categoryName)\n        setimageId(res.data.productImage.imageId);\n      })\n      .catch((error) => {\n        setmessage('Cant empty field')\n        setOpen(false);\n      });\n  }\n  /********   get Id end    ****************/\n  /*  For edit Api\n    */\n  const handleEdit2 = (id) => {\n    setsnackOpen(true);\n    if (updateproductName == '') {\n      setmessage('Product name cannot be empty')\n      return;\n    }\n    if (updateDescription== '') {\n      setmessage('Description cant be empty')\n      return;\n    }\n    if (updatestock == '') {\n      setmessage('Stock cant empty')\n      return;\n    }\n    if (updateunit == '') {\n      setmessage('Please Give unit value')\n      return;\n    }\n    if (updateprice == '') {\n      setmessage('Price cannot be empty')\n      return;\n    }\n    if (imageId == '') {\n      setmessage('Please upload product image')\n      return;\n    }\n    const formData = new FormData();\n    formData.append('imagefile', updatefile);\n    formData.append('data', JSON.stringify({\n      \"productName\": updateproductName,\n      \"description\": updateDescription,\n      \"stock\": updatestock,\n      \"unit\": updateunit,\n      \"categoryId\": updateCategoryId,\n      \"price\": updateprice,\n      \"imageId\": imageId,\n      \"userId\": localStorage.getItem('userId')\n    }))\n    axios.put(url+'product/' + id, formData\n    // , {\n    //   headers: {\n    //     Authorization: `Bearer ${localStorage.getItem('Token')}`,\n    //     'Content-Type': 'multipart/form-data'\n    //   }\n    // })\n    , {})\n      .then((response) => {\n        setmessage('product updated')\n        console.log(response)\n        seteditOpen(false);\n        setOpen(false);\n        getAllProducts();\n      })\n      .catch((error) => {\n        console.log(error);\n        setOpen(false);\n      });\n  }\n  const ResponsiveImage = ({ src, alt }) => {\n    return (\n      <div className=\"image-wrapper\">\n        <img className=\"responsive-image\" src={src} alt={alt} height='170' />\n      </div>\n    );\n  };\n  const [itemproductId, setItemproductId] = useState();\n \n  const AddtocartButton = ({ children, onClick }) => {\n    return (\n      <button className=\"add-to-cart-button\" onClick={onClick}>\n        {children}\n      </button>\n    );\n  };\n  const EditButton = ({ children, onClick }) => {\n    return (\n      <button className=\"edit-button\" onClick={onClick}>\n        {children}\n      </button>\n    );\n  };\n  const handleUpdatecategory = (event) => {\n    setupdateCategoryId(event.target.value)\n  }\n\n  const[isapprove ,setIsApprove] = useState(\"\");\n  function checkproductStatus (id, status) {\n    \n    const checkedData ={\"productId\":id,\n                        \"userId\": localStorage.getItem('userId'),\n                        \"status\":status                    \n  }\n    \n    console.log(id);\n    axios.put(url+'product' ,checkedData \n   // , { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n   , {})\n    .then(res => {\n      \n      setsnackOpen(true);\n      setIsApprove(res.data.status)\n\n      if(res.data.status==\"APPROVED\"){\n        setmessage(\"product approved\");\n        \n      }\n      else if(res.data.status==\"PENDING\"){\n        setmessage(\"Product Pending\");\n         \n      }\n      getAllProducts();\n      \n       \n    })\n    .catch(e => {\n\n      console.log(e.message);\n      getAllProducts();\n    })\n \n  }\n\n\n\n\n  return (\n    <div>\n      <>\n        <Navbar itemCount2 = {cartCount}/>\n      </>\n      <br />\n      <br />\n      <br /><br />\n      {isLoggedIn ? (\n        <Box    className=\"addBtn\" sx={{ \"& > :not(style)\": { m: 1 }}}>\n          <button\n            onClick={handleClickOpen}\n            style={{\n              float: \"right\",\n              marginLeft: \"20px\",\n              // marginTop: \"40.5px\",\n              border: \"2px solid #7bb8b1\",\n              color: \"white\",\n              padding: \"5px 5px\",\n              backgroundColor: \"#7bb8b1\",\n              cursor: \"pointer\",\n              fontSize: \"16px\",\n              borderRadius: \"25px\",\n            }}\n          >\n            Add Product\n          </button>\n          <TextField\n            \n            size=\"small\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton>\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            style={{width: '85%', borderRadius:'50px'}}\n            placeholder=\"Search Product or category...\"\n            className=\"searchBar\"\n            type=\"text\"\n            // value={searchText}\n            onChange={handleSearchValue}\n          />\n        </Box>\n      ) : (\n        <Box  className=\"addBtn\" sx={{ \"& > :not(style)\": { m: 1 } }}>\n          <br />\n          <TextField\n           size=\"small\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton>\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            style={{width: '95%', borderRadius:'50px'}}\n            placeholder=\"Search Product or category...\"\n            className=\"userSearchBar\"\n            type=\"text\"\n            // value={searchText}\n            onChange={handleSearchValue}\n          />\n        </Box>\n      )}\n      \n      <Button sx={{}}></Button>\n       \n      <Box sx={{ flexGrow: 1, display: 'flex', justifyContent: 'center' }} >\n        <Grid container spacing={1} style={{ direction: 'row', padding: '15px' }}>\n          {products.map((items) => (\n            <Grid disabled={items.stock === 0} item xs={6} md={6} lg={3} style={{ marginBottom: 15 }}>\n              <Card sx={{ maxWidth: 250, maxHeight: 350, minHeight:'350px' }}>\n                <CardMedia>\n                  <ResponsiveImage src={'data:image/png;base64,' + items.data} alt=\"Alt text for image\" />\n                </CardMedia>\n                <CardContent>\n                <Typography fontWeight={700} style={{ fontStyle: 'bold', color: \"#000000\", }} component=\"div\">\n                    {items.productName}&nbsp; \n                  </Typography>\n                {/* <Rating color=\"warning\" name=\"half-rating\" style={{color:'orange !important'}} defaultValue={items.ratings} precision={0.5} /> */}\n              <div style={{display:'flex'}}><Typography style={{ top: '-0.75em', fontSize:'10px' }}>$ </Typography>&nbsp;<Typography fontWeight={700}>{items.price}</Typography></div>\n                <div className=\"d-flex justify-content-between\">\n                \n                  <StockCount value={items.stock} />\n                  {isadminlogin1 || isLoggedIn ? (\n                    <>\n                     <Chip label={items.status} size='small' color={items.status===\"PENDING\"? 'error': 'success'} style={{fontSize: '0.7rem', fontFamily:'saira'}}></Chip>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n\n                    </div>\n                  \n                  {isLoggedIn ? (\n                    <>\n                     \n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                \n                <br></br>\n                {(() => {\n      if (isadminlogin1) {\n        return  <div>\n         \n        <Button onClick={() => checkproductStatus(items.productId, \"approved\")} >\n        Approve </Button>\n        <Button onClick={() => checkproductStatus(items.productId, \"pending\")} >\n        Decline </Button>\n      </div>;\n      } else if (isLoggedIn) {\n        return  <>\n                     \n         <Button onClick={() => handleEdit(items.productId)} variant=\"outlined\" size=\"small\"><EditIcon size=\"large\"  />EDIT</Button>\n         &nbsp;&nbsp;&nbsp;&nbsp;\n         <Button onClick={() => handleDelete(items.productId)} variant=\"outlined\"size=\"small\"><DeleteIcon size=\"large\"  />DELETE</Button>\n      </>;\n      } else {\n        return <>\n        <button className=\"add-to-cart-button\" \n        disabled={items.stock===0 ? true : false}\n        onClick={() => handleCartOpen(items.productId)}>\n        Add To cart\n      </button>\n      </>\n      }\n    })()}\n                \n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle><Typography fontSize={\"1.7rem\"}>Adding New Product</Typography></DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Product Name\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={productName}\n            onChange={(e) => setproductName(e.target.value)}\n          />\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Description\"\n            type=\"email\"\n            fullWidth\n            rows={\"4\"}\n            multiline\n            variant=\"standard\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Price \"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={price}\n            onChange={handlePriceChange}\n          />\n          {/* <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Stock\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={stock}\n            onChange={handleStockChange}\n          /> */}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Unit\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={unit}\n            onChange={(e) => setunit(e.target.value)}\n          />\n          <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-standard-label\">Category</InputLabel>\n            {/* <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Product Name\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={getCategoryId}\n            onChange={(e) => setCategory(e.target.value)}\n          /> */}\n            <Select\n              labelId=\"demo-select-small\"\n              id=\"demo-select-small\"\n              value={selectedOption}\n              label=\"Category\"\n              onChange={(event) => setSelectedOption(event.target.value)}\n            >\n              {category1.map((item) => (\n                <MenuItem value={item.categoryId}   >\n                  {item.categoryName}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Stack sx={{ marginTop: 2 }} direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Button variant=\"contained\" component=\"label\">\n              Uploading Product image\n              <input hidden value={''} onChange={(e) => setFile(e.target.files[0])} type=\"file\" />\n            </Button>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <ProductAddButton label=\"Add\" onClick={handleSubmit} />\n          <ProductAddButton label=\"Cancel\" onClick={handleClose} />\n          {/* <button  onClick={handleSubmit}>Add</button>\n          <button onClick={handleClose}>Cancel</button> */}\n        </DialogActions>\n      </Dialog>\n      {/* for uploading a product */}\n      <Dialog open={editopen} onClose={handleClose2}>\n        <DialogTitle>Updating a Product</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Product Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={updateproductName}\n            onChange={(e) => setupdateproductName(e.target.value)}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Description\"\n            type=\"text\"\n            fullWidth\n            rows={\"4\"}\n            multiline\n            variant=\"standard\"\n            value={updateDescription}\n            onChange={(e) => setupdateDescription(e.target.value)}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Price \"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={updateprice}\n            onChange={(e) => setupdatetprice(e.target.value)}\n          />\n          {/* <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Stock\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={updatestock}\n            onChange={(e) => setupdatestock(e.target.value)}\n          /> */}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"units\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            value={updateunit}\n            onChange={(e) => setupdateunit(e.target.value)}\n          />\n          <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 150 }} size=\"small\">\n            <InputLabel id=\"demo-simple-select-standard-label\">Category</InputLabel>\n            <Select\n              labelId=\"demo-select-small\"\n              id=\"demo-select-small\"\n              value={updateCategoryId}\n              label=\"Category\"\n              onChange={handleUpdatecategory}\n            >\n              {/* <MenuItem value={updateCategoryId} selectedOption={updateCategory} >{updateCategory}</MenuItem> */}\n              {category1.map((item) => (\n                <MenuItem value={item.categoryId} >\n                  {item.categoryName}\n                </MenuItem>\n              ))}\n              {/* **************************   */}\n            </Select>\n          </FormControl>\n          <Stack sx={{ marginTop: 2 }} direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Button variant=\"contained\" component=\"label\">\n              Uploading Product image\n              <input hidden value={''}\n                onChange={(e) => setupdateFile(e.target.files[0])}\n                type=\"file\" />\n            </Button>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          {/* <Button onClick={handleClose2}>Cancel</Button>\n          <Button onClick={() => handleEdit2(productId)}>Update</Button> */}\n          <ProductAddButton label=\"Update\" onClick={() => handleEdit2(productId)} />\n          <ProductAddButton label=\"Cancel\" onClick={handleClose2} />\n        </DialogActions>\n      </Dialog>\n      {/* end update dialog box */}\n      {/* add to cart dialog box */}\n      {/* Total cart dialog box */}\n      <Dialog open={totalCartOpen} onClose={handleCartClose}>\n        <DialogTitle>Total Item in your cart</DialogTitle>\n        <DialogContent>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleTotalCartClose}>Cancel</Button>\n          <Button onClick={handleSubmit}>Add</Button>\n        </DialogActions>\n      </Dialog>\n      {/* total cart dialog box end */}\n      <DialogAddSlot\n        fullWidth={'md'}\n        open={cartOpen}\n        onClose={handleCartClose}\n      >\n        <DialogTitle><Typography fontSize={'1.2rem'}>Adding Product in your cart</Typography></DialogTitle>\n        {<ProductAdd handleCartClose={handleCartClose} productId={itemproductId} setCartCount={setCartCount}\n        //  handleClose={}\n        />}\n      </DialogAddSlot>\n\n      \n\n\n      <Snackbar\n        open={snackopen}\n        autoHideDuration={6000}\n        onClose={handleClose1}\n        message={message}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        action={action}\n      />\n     {/* <Navbar itemCount2={<CartCount/>}/> */}\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      {/* <Divider>CENTER</Divider> */}\n      {\n         \n      }\n    </div>\n  )\n}\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/RegisterForm/RegistrationForm.js",["142","143","144","145"],"import Box from '@mui/material/Box';\nimport * as React from 'react';\nimport Shopping from '../../images/logo_secure_cart.png';\nimport { useState } from \"react\";\nimport FormControl from '@mui/material/FormControl';\nimport { useNavigate } from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport axios from \"axios\";\nimport { url } from \"../../ServiceApi/ServiceApi\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBRow,\n}\n  from 'mdb-react-ui-kit';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { InputLabel, MenuItem, Select } from '@mui/material';\nfunction RegistrationForm() {\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n \n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  const [fname, setfName] = useState('')\n  const [lName, setlName] = useState('')\n  const [role, setRole] = useState('')\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [mobile, setMobile] = useState('')\n  function clearData() {\n    setfName('');\n    setlName('');\n    setEmail('');\n    setPassword('');\n    setMobile('');\n    setUsername('');\n  }\n  const handleFname = (e) => {\n    setfName(e.target.value)\n  }\n \n  const handlelName = (e) => {\n    setlName(e.target.value)\n  }\n  const handleRole = (e) => {\n    setRole(e.target.value)\n  }\n  const handleEmail = (e) => {\n    setEmail(e.target.value)\n  }\n  const handleMobile = (e) => {\n    setMobile(e.target.value)\n  }\n  const handleUsername = (e) => {\n    setUsername(e.target.value)\n  }\n  \n  const handlePassword = (e) => {\n    setPassword(e.target.value)\n  }\n  const emailPattern = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%?=*&]).{8,}$/;\n  const [message, setmessage] = useState('');\n  const handleApi = () => {\n    setOpen(true);\n\n    \n\n    if (!fname) {\n      setmessage('Please enter your first name.')\n      //clearData();\n      return;\n    }\n    if (!lName) {\n      setmessage('Please enter your last name.')\n      //clearData();\n      return;\n    }\n\n    if (!username) {\n      setmessage('Please enter Username');\n      //clearData();\n      return;\n    }\n    \n    if (!emailPattern.test(email)) {\n      setmessage('Please enter a valid email address');\n      //clearData();\n      return;\n    }\n    if (!password) {\n      setmessage('Please enter your password')\n      //clearData();\n      return;\n    }\n    if (!mobile) {\n      setmessage('Please enter valid Phone number');\n      //clearData();\n      return;\n    }\n    if (!role) {\n      setmessage('Please choose any role')\n      //clearData();\n      return;\n    }\n    \n    \n   \n\n    \n    // if (!passwordPattern.test(password)) {\n    //   setmessage('Password must be at least 8 characters, contain atleast one Uppercase letter and special character');\n    //   //clearData();\n    //   return;\n    // }\n\n    setOpen(false);\n    \n    let data = JSON.stringify({\n      name: fname,\n      surname: lName,\n      email: email,\n      password: password,\n      username: username,\n      role: role,\n      phoneNumber: mobile,\n    })\n\n    alert(data);\n    axios.post(url+'user/signup', data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(result => {\n      setmessage('Registered successfully');\n      console.log(result.data)\n      setTimeout(function () {\n        navigate('/');\n      }, 2000);\n    })\n      .catch(error => {\n        console.log(error)\n        setmessage(error.response.data.message);\n        clearData();\n      })\n  }\n  const handlesignin = () => {\n    navigate('/')\n  }\n  return (\n    <div>\n      <MDBContainer  style={{backgroundColor:'aliceblue', minHeight:'calc(100vh - 10px)'}}>\n        <MDBRow>\n          <MDBCol md='2'></MDBCol>\n          <MDBCol md='8'>\n          <MDBCard className='my-2 ' style={{ borderRadius: '1rem', textAlign: 'center', top:'10px'}}>\n              <MDBCardBody style={{ textAlign: 'center', }}>\n                <img style={{ height: 130, width: 130, cursor: 'pointer' }} src={Shopping} />\n                <h5 className=\"fw-bold mb-2 text-center\">Create your Account</h5>\n                <MDBRow>\n                  <MDBCol col='12'>\n                    <TextField fullWidth size='small' value={fname} onChange={handleFname} label={'First Name'} id=\"margin-dense\" margin=\"dense\" required />\n                    <TextField fullWidth size='small' value={lName} onChange={handlelName} label={'Last Name'} id=\"margin-dense\" margin=\"dense\" required />\n                    <TextField fullWidth size='small' value={username} onChange={handleUsername} label={'Username'} id=\"margin-dense\" margin=\"dense\" required />\n                    <TextField fullWidth size='small' value={password} onChange={handlePassword} label={'Password'} id=\"margin-dense\" type={'password'} margin=\"dense\" required />\n                  </MDBCol>\n                  <MDBCol col='12' className='mb-3'>\n                  <TextField fullWidth size='small' value={email} onChange={handleEmail} label={'Email'} id=\"margin-dense\" margin=\"dense\" required />\n                    \n                    <TextField fullWidth size='small' value={mobile} onChange={handleMobile} label={'Phone number'} id=\"margin-dense\" margin=\"dense\" required />\n                    \n                    <FormControl fullWidth size='small'  margin=\"dense\">\n                    <InputLabel id=\"demo-simple-select-label\">Are you a </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={role}\n                      size='small'\n                      label=\"Are you a\"\n                      onChange={handleRole}\n                    >\n                      {/* <MenuItem value={\"admin\"}>ADMIN</MenuItem> */}\n                      <MenuItem value={\"seller\"}>SELLER</MenuItem>\n                      <MenuItem value={\"user\"}>BUYER</MenuItem>\n                    </Select>\n                  </FormControl>\n                  </MDBCol> \n                  \n                </MDBRow>\n                \n                \n                <FormControl required fullWidth sx={{ m: 1, minWidth: 150 }} size=\"medium\">\n                </FormControl>\n                <Box >\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Button variant=\"contained\" size='small' style={{width:'70%'}} fullWidth onClick={handleApi} >Sign Up</Button>\n                  </div>\n                  <p>Already have an account?  <a style={{ color: 'blue', cursor: 'pointer', textDecoration: 'none' }} onClick={handlesignin}>Login</a>\n                  </p>\n                </Box>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol> <MDBCol md='2'></MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        onClose={handleClose}\n        message={message}\n        action={action}\n      />\n    </div>\n  );\n}\nexport default RegistrationForm;\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/login/InActive.js",["146"],"import { Box, Typography, CircularProgress } from \"@mui/material\";\nimport restrict from '../../images/restrict.png';\nimport { useNavigate } from 'react-router-dom';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nexport default function InActive() {\n    const navigate = useNavigate();\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"#f5f5f5\",\n      }}\n    >\n         <p onClick={()=> navigate('/')}><KeyboardBackspaceIcon/>Go Back</p>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          p: 4,\n          backgroundColor: \"white\",\n          borderRadius: 4,\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n\n       \n\n        <img\n          src={restrict}\n          alt=\"No access\"\n          width={280}\n          height={280}\n        />\n        <Typography variant=\"h5\" component=\"h1\" align=\"center\">\n          Your account still needs to approved by ADMIN, Please wait for sometime\n        </Typography>\n        <Typography variant=\"body1\" align=\"center\" my={2}>\n          We apologize for the inconvenience. Your account still needs to approved by ADMIN. Please check back later.\n        </Typography>\n        \n      </Box>\n    </Box>\n  );\n}","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Category/Category.js",["147","148","149","150","151","152","153","154","155"],"import ReactDOM from \"react-dom\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport '../Product/ProductCSS/Product.css';\nimport Box from '@mui/material/Box';\nimport Navbar from \"../Navbar/Navbar\";\nimport ProductAddButton from \"../Product/ProductAddButton\";\nimport { url } from \"../../ServiceApi/ServiceApi\";\nimport { Typography } from \"@mui/material\";\nexport default function Category() {\n  const [snackopen, setsnackOpen] = React.useState(false);\n  const[message, setmessage]= useState('');\n  const handleClose1 = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setsnackOpen(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose1}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  const [open, setOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(!open);\n    getCategory();\n  };\n  const handleClose = () => {\n    setaddCategory('');\n    handleClickOpen();\n  };\n  const handleEditClose = () => {\n    setEditOpen(false);\n    setUpdateCategory('');\n  };\n     const [categories, setcategories] = useState([]);\n    console.log(categories.length);\n     useEffect(() => {\n      getCategory();\n  }, []);\n  function getCategory(){\n    const api = url+'product/category/ordercategory/'+ localStorage.getItem('userId')\n    axios.get(api\n      //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n      , {})\n      .then(res => {\n        console.log(res.data);\n        setcategories(res.data);\n      })\n      .catch(e => {\n        console.log(e)\n      })\n    }\n    const [updateCategory, setUpdateCategory] = useState();\n  const [addCategory, setaddCategory] = useState();\n  const categoryData = {\"categoryName\": updateCategory,\n                         \"userId\":localStorage.getItem('userId')                        \n                      }\n  const handleSubmit = () => {\n    setsnackOpen(true);\n    if(!addCategory){\n      setmessage('Please enter the category name')\n      return ;\n    }\n    axios.post(url+'product/category', {\"categoryName\": addCategory,\n    \"userId\":localStorage.getItem('userId')                        \n }\n//  ,\n//     {\n//      headers: {\n//        Authorization: `Bearer ${localStorage.getItem('Token')}`,\n//        'Content-Type': 'application/json'\n//      }\n//    })\n, {})\n   .then((response) => {\n      console.log(response);\n       setmessage('category added');\n       setaddCategory('');\n       getCategory();\n       handleClickOpen();\n   })\n   .catch((error) => {\n    setmessage(error.response.data.message);\n    setaddCategory(''); \n    console.log(error.response.data.message);    \n    handleClickOpen();\n   });\n}; \nconst handleDelete = (id) => {\n  const api = url+'product/category/'+ id +'/'+localStorage.getItem('userId')\n  axios.delete(api\n    //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n    , {})\n    .then(res => {\n      getCategory();\n      console.log(res.data);\n    })\n    .catch(e => {\n       console.log(e)\n       setsnackOpen(true);\n      setmessage(\"Can't delete this category, Some products already mapped under this\");\n    })\n}\nconst [updateId, setUpdateId] = useState();\nconst handleEdit = (id) => {\n  setEditOpen(true);\n  const api = url+'product/category/'+ id\n  axios.get(api\n    //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n    , {})\n    .then(res => {\n      console.log(res.data);\n      setUpdateCategory(res.data.categoryName);\n      setUpdateId(id)\n    })\n    .catch(e => {\n      console.log(e)\n    })\n}\nconst handleUpdate = () => {\n  const api = url+'product/category/'+ updateId\n  axios.put(api, categoryData\n    // ,\n    //  { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n     , {})\n     .then(res => {\n      setsnackOpen(true);\n      setmessage('category updated');\n      setEditOpen(false);\n      getCategory();\n    })\n    .catch(e => {\n      setEditOpen(false);\n      console.log(e)\n    })\n}\nconst rows = categories.map((item) => (\n  <tr key={item.categoryId}>\n    <td style={{textAlign:'center'}}>{item.categoryName}</td>\n    <td style={{textAlign:'center'}}><Button onClick={() => handleEdit(item.categoryId)}><CreateIcon /></Button> &nbsp;\n    <Button style={{color: \"#C8626D\"}} onClick={() => handleDelete(item.categoryId)}><DeleteIcon /></Button></td>\n  </tr>\n));\n  return (\n      <div className=\"App\">\n      <Navbar />\n      <Box style={{marginTop:100}}>\n      <ProductAddButton label='Add Category'  onClick={handleClickOpen} />\n      </Box>\n      {/* <Button sx={{marginTop: 10 }} variant=\"outlined\" onClick={handleClickOpen}>\n         Add Category\n      </Button> */}\n      <div className=\"table-container\">\n      <table>\n        <thead >\n          <tr style={{padding:'20px'}}>\n            <th style={{padding:'20px',textAlign:'center'}}>Category Name</th>\n            <th style={{textAlign:'center'}} >Action</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n      </div> \n      {/* <MaterialReactTable columns={categories} data={categories} /> */}\n      {/* <table align=\"center\" style={{marginTop: 10}}>\n      <thead>\n        <tr>\n          <th>S.No</th>\n          <th >Category Name</th>\n          <th colSpan=\"2\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {categories.map((item, index) => (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{item.categoryName}</td>\n            <td colSpan=\"2\"><CreateIcon /></td>\n            <td colSpan=\"2\"><DeleteIcon /></td>\n          </tr>\n        ))}\n      </tbody>\n    </table> */}\n         {/* <TableContainer  component={Paper}>\n      <Table sx={{ minWidth: 450, marginTop: 5 }} >\n        <TableHead sx={{backgroundColor: 'blueviolet'}}>\n          <TableRow>\n            <TableCell sx={{textAlign: 'center', fontSize:18, }}> Category Name</TableCell>\n             <TableCell sx={{textAlign: 'center',fontSize:18, }} colSpan={2}>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {categories.map((row) => (\n            <TableRow sx={{borderBlockStartColor: 'red'}} key={row.categoryId}>\n              <TableCell sx={{textAlign: 'left', fontSize:18, fontWeight:500 }} component=\"th\" scope=\"row\">\n                {row.categoryName}\n              </TableCell>\n              <TableCell sx={{textAlign: 'center', fontSize:18,   }} component=\"th\" scope=\"row\"><DeleteIcon /> </TableCell>\n              <TableCell sx={{textAlign: 'center', fontSize:18,  }} component=\"th\"  scope=\"row\"> <CreateIcon />  </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer> */}\n    {/* <Stack spacing={7}>\n      <Pagination\n      count={12} color=\"secondary\" />\n    </Stack> */}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle><Typography fontSize={\"20px\"}>Category</Typography></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n             You add some category depends on the product type\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Add Category\"\n            type=\"text\"\n            fullWidth\n            value={addCategory}\n            onChange={(e) => setaddCategory(e.target.value)}\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n        <ProductAddButton  label=\"Add\" onClick={handleSubmit}/>\n            <ProductAddButton  label=\"Cancel\" onClick={handleClose}/>\n                  </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={snackopen}\n        autoHideDuration={6000}\n        onClose={handleClose1}\n        message={message}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n       }}\n        action={action}\n      />\n      <Dialog open={editOpen} onClose={handleEditClose}>\n        <DialogTitle><Typography fontSize={\"20px\"}>Updating a Category</Typography></DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            type=\"text\"\n            fullWidth\n            value={updateCategory}\n            onChange={(e) => setUpdateCategory(e.target.value)}\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n        <ProductAddButton  label=\"Update\" onClick={handleUpdate}/>\n            <ProductAddButton  label=\"Cancel\" onClick={handleEditClose}/>\n                  </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Cart/AddToCartIcon.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport GridItem from './GridItem';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport '../Cart/CSS/Shopping.css'\nimport Navbar from '../Navbar/Navbar';\nimport { url } from '../../ServiceApi/ServiceApi';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { CircularProgress, FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\nimport DuitnowImg from './images/Duitnow.png';\nimport GrabpayImg from './images/Grabpay.png';\nimport { PayPalButton } from 'react-paypal-button-v2';\n\n\nfunction AddToCartIcon({ cartCount1 }) {\n\n  if (!cartCount1) {\n    cartCount1 = 0;\n  }\n\n  const [orderOpen, orderSetOpen] = React.useState(false);\n\n\n\n  const handlePaymentDialogClose = () => {\n    orderSetOpen(false);\n  };\n\n\n\n\n\n\n\n\n  const navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  const [cartCount, setCartCount] = React.useState(cartCount1);\n\n  const handleClose = (event, reason) => {\n    //navigate('/myorders');\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  const data = {\n    \"userId\": localStorage.getItem(\"userId\"),\n    \"orderStatus\": \"ACTIVE\"\n  };\n  const [cartInfo, setCartInfo] = useState([]);\n  const [cartid, setCartId] = useState(0);\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    handleGetCartItem();\n  }, []);\n  async function handleGetCartItem() {\n    try {\n      setLoad(true);\n      await axios.post(url + 'order/cart/data', data\n        //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n        , {})\n        .then(res => {\n          setLoad(false);\n          if (res.data) {\n            console.log(res.data);\n            setCartId(res.data.cartId)\n            setCartInfo(res.data.item);\n            console.log(res.data);\n            console.log(res.data.cartId);\n            axios.post(url + 'order/cart/data', data\n              //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n              , {})\n              .then(res => {\n                {\n                  setCartCount(res.data.item.length);\n                }\n              })\n              .catch(e => {\n                console.log(e.message);\n              });\n          }\n\n        })\n    } catch (error) {\n      console.error(error);\n      if (!cartInfo) {\n        return navigate('/not-found');\n      }\n    }\n  }\n  const totalAmount = [];\n  {\n    cartInfo.map((e) => (\n      totalAmount.push(e.totalPrice)\n    ))\n  }\n  let sum = 0;\n  for (let i = 0; i < totalAmount.length; i++) {\n    sum += totalAmount[i];\n  }\n  const [message, setmessage] = useState('');\n  const [payButton, setPayButton] = useState(false);\n\n  const date = new Date();\n\n  const [paymentOption, setPaymentOption] = React.useState(\"\");\n  const [referenceNumber, setReferenceNumber] = React.useState(\"\");\n\n  const handlePaymentOption = (e) => {\n    setPaymentOption(e.target.value);\n    if (e.target.value !== \"\") {\n      setReferenceNumber(Math.floor(100000000 + Math.random() * 900000000));\n    }\n  }\n\n  const onSuccess = (details, data) => {\n    console.log(\"--------PAYPAL START-----------\");\n    console.log(details);\n    console.log(data);\n    console.log(\"--------PAYPAL END-----------\");\n    const orderDetails = {\n      \"transactionId\": data.paymentID,\n      \"paymentOption\": data.paymentSource,\n      \"payerId\": data.payerID,\n      \"paymentStatus\": details.status,\n      \"cartId\": cartid,\n      \"userId\": localStorage.getItem(\"userId\")\n    };\n\n    axios.post(url + 'order', orderDetails\n      //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n      , {})\n      .then(res => {\n        console.log(res.data);\n        navigate('/myorders');\n        setOpen(true);\n        setmessage('your order placed successfully...Please check the status in My orders tab')\n        setCartId(0);\n        orderSetOpen(false);\n        \n      })\n      .catch(e => {\n        console.log(e);\n        //setmessage(e.response.data.message);\n      })\n  };\n  const submitMyOrders = () => {\n\n    if (cartid == 0) {\n      setmessage('Cart is empty You Add to some item your cart');\n      setOpen(true);\n      return;\n    } else {\n    }\n    if (!paymentOption || !referenceNumber) {\n      setmessage('Fields cannot be blank')\n      setOpen(true);\n    } else {\n      const orderDetails = {\n        \"referenceNumber\": referenceNumber,\n        \"paymentOption\": paymentOption,\n        \"cartId\": cartid,\n        \"userId\": localStorage.getItem(\"userId\"),\n        \"date\": date\n      };\n\n    }\n\n\n\n  };\n\n\n\n\n  return (\n    <div>\n      <Navbar itemCount2={cartCount} />\n      <br />\n      <br />\n      <br />\n      {payButton ? (\n        \"\"\n      ) : (\n        <>\n        </>\n      )\n      }\n      <Grid container spacing={2}>\n        <Grid item xs={8} style={{ marginTop: 13, backgroundColor: '#ffffff' }}>\n          <h2><b>Shopping Cart</b></h2>\n          <Grid container spacing={2}  >\n            {\n              load ? <CircularProgress /> : \"\"\n            }\n\n            {cartInfo.map((e) => (\n              <Grid item xs={12}>\n                <GridItem handleGetCartItem={handleGetCartItem} productImage={e.product.imageData} productId={e.product.productId} productName={e.product.productName} stock={e.product.stocks}\n                  quantity={e.quantity} price={e.product.price} totalprice={e.totalPrice} itemid={e.itemId}\n                  cartId={cartid} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={4}>\n          <div style={{ marginTop: 50, overflow: 'auto' }}>\n            <p style={{}}><strong>Total:</strong> &nbsp; <span><b>$</b></span>&nbsp;<b>{sum}</b></p>\n\n            {\n              sum !== 0 ? (\n                <p style={{ color: 'green', paddingRight: 10 }}>Your order is eligible to check out</p>\n              ) : (\n                <p style={{ color: 'green', paddingRight: 10 }}>Not items in cart, Your order is not eligible to check out</p>\n              )\n            }\n\n            {/* <Button onClick={submitMyOrders} \n            disabled={sum===0}\n            style={{ borderRadius: 20, backgroundColor: '#f0de16', color: '#000000' }}>\n              <span style={{ fontWeight: 500, fontSize: 14 }}><b>Proceed to Buy</b></span>\n\n            \n            </Button> */}\n            {\n              sum !== 0 ? (\n                <PayPalButton\n                  amount={sum}\n                  currency=\"USD\"\n                  onSuccess={onSuccess}\n                  options={{\n                    clientId: \"AeDKUs80SQ7WBsUtwi1uxhTlg4J4TqJVIaODkQCl2IAhYvVzHrVY1oGacdHB6U3kTBKPmIZN9-SFQUTU\",\n                  }} />\n              ) : \"\"}\n          </div>\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        action={action}\n      />\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n  )\n}\nexport default AddToCartIcon\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Order/MyOrderCard.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React, { useState } from 'react'\nimport '../Order/CSS/order.css'\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { IconButton } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';  \nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share'; \nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport ProductReviews from '../Product/ProductReviews';\n// const Item = styled(Paper)(({ theme }) => ({\n//   backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n//   ...theme.typography.body2,\n//   padding: theme.spacing(1),\n//   textAlign: 'center',\n//   color: theme.palette.text.secondary,\n// }));\n// const ExpandMore = styled((props) => {\n//   const { expand, ...other } = props;\n//   return <IconButton {...other} />;\n// })(({ theme, expand }) => ({\n//   transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n//   marginLeft: 'auto',\n//   transition: theme.transitions.create('transform', {\n//     duration: theme.transitions.duration.shortest,\n//   }),\n// }));\n\n\n\n\nconst MyOrderCard = ({ onVariableChange,  item, dateTime, totalAmount }) => {\n  const Img = styled('img')({\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  });\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // };\n\n\n  \n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    '& .MuiDialog-paper': {\n      padding: theme.spacing(2),\n      minWidth: '700px !important',\n      height: '450px'\n    },\n    '& .MuiDialogActions-root': {\n      padding: theme.spacing(1),\n    },\n  }));\n  const BootstrapDialogTitle = (props) => {\n    const { children, onClose, ...other } = props;\n    return (\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n        {children}\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n\n          >\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n    );\n  };\n\n\n  BootstrapDialogTitle.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func.isRequired,\n  };\n\n\n\n  console.log(item);\n  console.log(dateTime);\n  console.log(totalAmount);\n  const dateString = dateTime;\n  const date = new Date(dateString);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: true,\n  };\n// format the date using the options and Indian English locale\n  const formattedDate = date.toLocaleString('en-US', options); \n          onVariableChange(formattedDate);\n  // CARD EXPAND COLLAPSE\n  const [expanded, setExpanded] = React.useState(false);\n  const [selectedProduct, setSelectedProduct] = React.useState(false);\n  const [isAddCategoryOpen, setIsAddCategoryOpen] = React.useState(false);\n\n  function addReviews(prodId){\n    setSelectedProduct(prodId);\n    toggleAddCategoryModal() ;\n  }\n\n\n  function toggleAddCategoryModal() {\n    setIsAddCategoryOpen(!isAddCategoryOpen);\n    if (isAddCategoryOpen === true) {\n      \n\n    }\n  }\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  // mui card exapnd collapse for main card\n            const ExpandMore = styled((props) => {\n              const { expand, ...other } = props;\n              return <IconButton {...other} />;\n            })(({ theme, expand }) => ({\n              transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n              marginLeft: 'auto',\n              transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n              }),\n            }));\n            const [expanded1, setExpanded1] = React.useState(false);\n            const handleExpandClick = () => {\n              setExpanded(!expanded);\n            };\n  // *****************End ***************\n  return (\n    <div>\n      <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')} style={{ marginBottom: '20px', maxWidth: '80%', marginLeft: '8%' }}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          style={{ position: 'relative', backgroundColor: '', color:'#0a0a0a' }}\n        >\n          <Col md>\n            <Typography sx={{ width: '33%', flexShrink: 0 }} >\n              <h6><b>Date</b></h6>\n            </Typography>\n            <p className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\"><b>{formattedDate}</b></p>\n          </Col>\n          <Col md={2}>\n            <Typography style={{paddingLeft:10}} sx={{ width: '33%', flexShrink: 0 }}>\n              <h6><b>Total</b></h6>\n            </Typography>\n            <p style={{paddingLeft:10}} className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\">$&nbsp;<b>{totalAmount}</b></p>\n          </Col>\n          <Col md={4}>\n            <Typography style={{paddingLeft:10}} sx={{ width: '33%', flexShrink: 0 }}>\n              <h6><b>Total Items</b></h6>\n            </Typography>\n            <p style={{paddingLeft:10}} className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\">    <b>{item.length}</b></p>\n          </Col>\n          <Col md>\n            <Typography sx={{ width: '33%', flexShrink: 0 }}>\n              <h6><b>Shipped To</b></h6>\n            </Typography>\n            <p className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\"><b>{localStorage.getItem('username')}</b></p>\n          </Col>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            {item.map(item => (\n              <div className=\"product\">\n             <Row  className=\"no-gutters mt-3\">\n                <Col xs={3} md={3} >\n                  {\n                    item.product ? \n                    <img style={{ maxHeight: 100, maxWidth: 100 }} alt=\"complex\" src={'data:image/png;base64,' + item.product.imageData} />\n                    : \"\"\n\n                  }\n                   </Col>\n                <Col xs={9} md={9} className=\"pr-0 pr-md-3\">\n                  <h6 className=\"text-charcoal mb-2 mb-md-1\">\n                  {\n                    item.product ?\n                    <p style={{ color: '#507694' }} className=\"text-charcoal\"><b>{item.product.productName}</b></p>\n                    :\"\"\n                  }\n                    </h6>\n                  <ul className=\"list-unstyled text-pebble mb-2 small\">\n                    <li>\n                      <b>Quantity: </b> {item.quantity}\n                    </li>\n                  </ul>\n                  <h6 className=\"text-charcoal text-left mb-0 mb-md-2\"><b>Price:</b>&nbsp;$<b style={{color: 'text.secondary'}}> {item.totalPrice}</b></h6>\n                </Col>\n                {/* <Col xs={3} md={3} >\n                  <Button onClick={() => addReviews(item.product.productId)}>ADD REVIEWS</Button>\n                </Col> */}\n              </Row>\n               </div>\n            ))}\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n\n\n      <BootstrapDialog\n        onClose={toggleAddCategoryModal}\n        aria-labelledby=\"customized-dialog-title\"\n        open={isAddCategoryOpen}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" className=\"toolHeader\" style={{ textAlign: 'center', backgroundColor: '#FFEEE3', color: 'black' }}>\n          Reviews:\n        </BootstrapDialogTitle>\n\n        <ProductReviews addCategoryModal={toggleAddCategoryModal} productId={selectedProduct}/>\n\n      </BootstrapDialog>\n    </div>\n  )\n}\nexport default MyOrderCard\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/ProductAdd.js",["201","202","203","204","205","206","207","208","209","210","211"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n \nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n \nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport { styled } from '@mui/material/styles';\n\nimport Typography from '@mui/material/Typography';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { url } from '../../ServiceApi/ServiceApi';\nimport { Card, Chip, Divider, FormControl, Rating, TextField } from '@mui/material';\n \n \n \n\n\nconst ProductAdd = ({ productId, handleCartClose, setCartCount}) => {\n\n  const Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\nconst [product, setproduct]= useState([]);\nconst [price, setPrice] = useState(0);\nconst [price1, setPrice1] = useState(0);\nconst [image, setImage] = useState('');\nconst [stock, setStock] = useState(100);\nconst [unit, setUnit] = useState();\n  \nuseEffect(() => {\n    \n  getProductById();\n    },[]);\n\n     \n   function getProductById(){\n      axios.get(url+'product/' + productId\n      , {})\n      // , {\n      //   headers: {\n      //     Authorization: `Bearer ${localStorage.getItem('Token')}`\n  \n      //   }\n      // })\n        .then((res) => {\n               \n              setproduct(res.data);\n              \n              setPrice1(res.data.price);\n              setPrice(res.data.price);\n              setImage(res.data.imageData)\n              setStock(res.data.stocks);\n              setUnit(res.data.unit);\n             \n        })\n        .catch((error) => {\n         \n            console.log(error.message);\n  \n           \n        });\n    }\n    \n  \n\n   \n    \n  const handleaddItem = () => {\n    \n    setOpen(true);\n    const cartData = {\n      \"quantity\": quantity,\n\t\t\t\"productId\": productId,\n\t\t\t\t\"userId\": localStorage.getItem(\"userId\")   \n    };\n    const data = {\n      \"userId\": localStorage.getItem(\"userId\"),\n      \"orderStatus\": \"ACTIVE\"\n    };\n   axios.post(url+'order/cart', JSON.stringify(cartData)\n   , {\n      headers: {\n        //Authorization: `Bearer ${localStorage.getItem('Token')}`,\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    })\n  //, {})\n      .then((response) => {\n        console.log(response.data);\n        \n        axios.post(url+'order/cart/data', data\n        , {})\n      //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n      .then(res => {\n\n        {\n          setCartCount(res.data.item.length);\n        }\n\n      \n\n      })\n      .catch(e => {\n\n        console.log(e.message);\n\n      });\n       \n      setmessage('product add to in cart');\n       \n      setTimeout(function() {\n        handleCartClose();\n    }, 1000);\n\n\n       \n      \n\n      })\n      .catch((error) => {\n        \n        setmessage(error.response.data.message);\n        \n         \n      });\n\n     \n     \n  }\n \n  \n  const [quantity, setQuantity] = useState(1);\n   const [rate, setRate] = useState(0);\n   const [review, setReview] = useState(\"\");\n \n   \n\n  const handleQuantityChange = () => {\n      \n\n\n\n    if(quantity < stock)\n    {\n        \n      setQuantity(quantity + 1);\n      setPrice(price1 * (quantity + 1));\n    }\n    else {\n      setOpen(true);\n      setmessage(\"Can't add more then \"+stock+\" quantity. Because low stock\");\n      return;\n    }\n   \n   \n    \n     \n   \n\n   \n\n\n  };\n\n  const handleQuantityLess = () => {\n     if(quantity>1){\n    setQuantity(quantity - 1);\n     }\n     if(quantity>1){\n      setPrice(price1 * (quantity - 1));\n       }\n  \n  };\n\n  const [message, setmessage] = useState('');\n\n const [open, setOpen] = React.useState(false);\n\n  \n\n const handleClose = (event, reason) => {\n   if (reason === 'clickaway') {\n      handleCartClose();\n      \n     return;\n   }\n\n   setOpen(false);\n };\n\n const action = (\n   <React.Fragment>\n      \n     <IconButton\n       size=\"small\"\n       aria-label=\"close\"\n       color=\"inherit\"\n       onClick={handleClose}\n     >\n       <CloseIcon fontSize=\"small\" />\n     </IconButton>\n   </React.Fragment>\n );\n\n\n const CustomButton = ({ onClick, color, text }) => {\n  return (\n    <Button variant=\"outlined\" color={color} onClick={onClick}>\n      {text}\n    </Button>\n  );\n}\n\n\n\n\n\n  return (\n    \n   <>\n          \n              <DialogContent>\n              <br></br>\n              <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          \n\n              <img src={\"data:image/png;base64,\"+image} style={{   border:'1px solid #ddd', borderRadius:'4px', padding:5, width:'300px' }} alt={product.productName}/>\n               \n\n              </Grid>\n              <Grid item xs={1}> </Grid>\n        <Grid   item xs={5}>\n           <Item>\n            <Typography>{product.productName}</Typography>\n             \n            <Typography><strong>$ {price1}</strong></Typography>\n           \n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n           \n            <Button onClick={handleQuantityLess}>-</Button>\n            <Button > {quantity} </Button>\n            <Button onClick={handleQuantityChange}>+</Button>\n          \n\n            \n            </ButtonGroup>\n            <span style={{paddingLeft:5, fontSize:14}}><strong>{unit}</strong></span>\n            {/* <button onClick={handleQuantityChange}>+</button>\n              <span>\n                   \n              </span>\n     \n              <button onClick={handleQuantityLess}>-</button> */}\n              </Item>\n              <Typography style={{marginTop:10, marginLeft:7, color:'Highlight'}} variant=\"h6\" component=\"h6\">\n              Total Price:   <span style={{color:'#063970'}}>$ {price} </span>\n</Typography>\n\n<br></br>\n<DialogActions>\n              <CustomButton color=\"secondary\" text='Cancel'  onClick={handleCartClose}>Cancel</CustomButton >\n        <CustomButton text='Add To Cart'  onClick={handleaddItem} >Add To Cart</CustomButton >\n              </DialogActions>\n              \n              \n\n      </Grid>\n\n      <Grid item xs={12} >\n              <>\n              {\n                product && product.seller && product.seller.firstName ? (\n<Typography noWrap fontWeight={700}>SOLD BY : <Chip label={(product.seller.firstName)+\" \"+ (product.seller.lastName) }></Chip></Typography>\n              \n                ):\"\"\n              }\n              <Typography noWrap fontWeight={500} fontSize={\"1.0rem\"}>{product.description}</Typography>\n              \n              </>\n              {/* \n              <br></br>\n              <Divider/>\n              <br></br>\n              \n              <Typography noWrap fontWeight={700}>REVIEWS:</Typography>\n              {product.feedbacks && product.feedbacks.length > 0 ?\n               product.feedbacks.map((each, ind) => (\n                <Box style={{padding:'20px'}}>\n                <Typography fontWeight={600}>{each.buyerId.firstName} {each.buyerId.lastName}:</Typography>\n                  <Typography variant='subtitle2'><i>{each.feedbackContent}</i></Typography>\n                  <br></br>\n                  <Divider/>\n                  <br></br>\n                  </Box>\n               )) : \"\"\n              \n              } */}\n\n      </Grid>\n\n\n      </Grid>\n             \n\n    </Box>\n                   \n              \n             \n              </DialogContent>\n             \n\n\n              <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n       }}\n        action={action}\n      />\n\n</>\n  )\n}\n\nexport default ProductAdd\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/ProductAddButton.js",[],"/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/StockCount.js",["212","213"],"import { Chip } from '@mui/material';\nimport React from 'react'\n\nfunction StockCount(props) {\n\n    const value = props.value;\n\n  if (value == 0) {\n    return <Chip label=\"STOCK UNAVAILABLE\" size='small' color='error' style={{fontSize: '0.7rem', fontFamily:'saira'}}></Chip>;\n  } else if (value < 10) {\n    return <Chip label={value + \" in Stock\"}size='small' color='warning' style={{fontSize: '0.7rem'}}></Chip>;\n    // <p style={{color:'#c49c16'}}><b>Just {value} Quantity left</b></p>;\n  } else {\n    return <Chip label=\"STOCK AVAILABLE\" size='small' color='success' style={{fontSize: '0.7rem', fontFamily:'saira'}}></Chip>;\n  }\n\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default StockCount\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Cart/GridItem.js",["214","215","216"],"import React, { useState } from 'react'\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport deletecart from './images/icons8-ecommerce-64.png'\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { url } from '../../ServiceApi/ServiceApi';\nconst GridItem = ({handleGetCartItem, productImage, productId, productName, quantity, stock, price, totalprice, itemid, cartId }) => {\n  const[selectQuantity, setSelectQuantity] = useState(quantity);\n  const handleDeleteItem = () => {\n    axios.delete(url+'order/items/'+itemid+'/'+cartId+'/'+ localStorage.getItem('userId')\n    //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n    , {})\n    .then(res => {\n      console.log(res.data);\n      handleGetCartItem();\n    })\n    .catch(e => {\n      console.log(e.message);\n    })\n  }\n  const[message, setMessage] = useState();\n  const handleSelectChange = (event) => {\n    setSelectQuantity(event.target.value);\n    if(stock <= event.target.value){\n      setOpen(true);\n      setMessage(\"can't add more quantity. Beacause only \"+stock+\" is left\");\n   } \n    const cartData = {\n        \"quantity\": event.target.value,\n\t\t\t  \"productId\": productId,\n\t\t\t\t\"userId\": localStorage.getItem(\"userId\"),\n        \"cartId\":cartId  \n    };\n   axios.put(url+'order/items/'+itemid,cartData\n  //  , {\n  //     headers: {\n  //       Authorization: `Bearer ${localStorage.getItem('Token')}`\n  //     }\n  //   })\n    , {})\n      .then((response) => {\n        setSelectQuantity(event.target.value);\n        handleGetCartItem();\n        console.log(response.data);\n      })\n      .catch((error) => {\n       console.log(error);\n      });\n  }\n  const [open, setOpen] = React.useState(false);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  return (\n    <div>\n             <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        action={action}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n       }}\n      />\n<div>\n      <div className=\"shopping-cart\">\n        <div className=\"column-labels\">\n                 </div>\n    <br/>\n    <br/>\n        <div className=\"product\">\n          <div className=\"product-image\">\n          <img src={\"data:image/png;base64,\"+productImage} style={{ maxWidth: '100%', verticalAlign:'middle', borderRadius:4 }} />  \n          </div>\n          <div className=\"product-details\">\n            <div style={{fontSize:20, paddingTop:20}} className=\"product-title\"><b>{productName}</b></div>\n            {/* <p className=\"product-description\">The best dog bones of all time. Holy crap. Your dog will be begging for these things! I got curious once and ate one myself. I'm a fan.</p> */}\n          </div>\n          <div style={{paddingTop:20}} className=\"product-price\"><b>$</b> {price}</div>\n          <div className=\"product-quantity\">\n          <FormControl  sx={{ m: 1, minWidth: 80 }} size=\"small\">\n                <InputLabel id=\"demo-select-small\">Qty :</InputLabel>\n                <Select\n              labelId=\"demo-select-small\"\n              id=\"demo-select-small\"\n              value={selectQuantity}\n              disabled\n              label=\"Category\"\n              onChange={handleSelectChange}\n            >\n          <MenuItem value={1}  >{1}</MenuItem>\n          <MenuItem value={2}  >{2}</MenuItem>\n          <MenuItem value={3}  >{3}</MenuItem>\n          <MenuItem value={4}  >{4}</MenuItem>\n          <MenuItem value={5}  >{5}</MenuItem>\n          <MenuItem value={6}  >{6}</MenuItem>\n          <MenuItem value={7}  >{7}</MenuItem>\n          <MenuItem value={8}  >{8}</MenuItem>\n          <MenuItem value={9}  >{9}</MenuItem>\n          <MenuItem value={10}  >{10}</MenuItem>\n            </Select>\n          </FormControl>\n          </div>\n      <div style={{paddingTop:20}} className=\"product-line-price\"> <b>$</b>  {totalprice}</div>\n          <div className=\"product-removal\" style={{paddingLeft:50, paddingTop:20}}>\n          <Button color=\"secondary\" \n               onClick={handleDeleteItem}\n            >  <img src={deletecart}style={{height:20, width:20}}/>\n            </Button>\n          </div>\n        </div>\n                </div>\n        </div>\n        {/* <Navbar itemCount2={<CartCount/>}/> */}\n    </div>\n  )\n}\nexport default GridItem\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Navbar/Navbar.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\n  \nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\nimport { useNavigate } from 'react-router-dom';\nimport '../Product/ProductCSS/Product.css';\n  \nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Shopping from '../../images/logo_secure_cart.png';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport AppBar from '@mui/material/AppBar';\nimport Slide from '@mui/material/Slide';\nimport { url } from \"../../ServiceApi/ServiceApi\";\nimport { Divider } from \"@mui/material\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : 'white',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\nconst useStyles = styled({\n  root: {\n    '&:hover': {\n      textDecoration: 'underline', // add any other styles you want here\n    },\n  },\n});\nfunction Navbar({ itemCount2 }) {\n  const [itemCount, setitemCount] = useState(itemCount2);\n  console.log(\"---navbar cat number--\", itemCount2);\n  // setitemCount(itemCount2);\n  const classes = useStyles();\n  const data = {\n    \"userId\": localStorage.getItem(\"userId\"),\n    \"orderStatus\": \"ACTIVE\"\n  };\n  const [cartInfo, setCartInfo] = useState([]);\n  const [cartid, setCartId] = useState(0);\n  async function handleClickOpenCart() {\n    navigate('/mycart');\n    try {\n      await axios.post(url+'order/cart/data', data \n        //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n        , {})\n        .then(res => {\n          console.log(res.data);\n          setCartId(res.data.cartId)\n          setCartInfo(res.data.item);\n          console.log(cartInfo);\n        })\n    } catch (error) {\n      console.error(error);\n      if (!cartInfo) {\n        return navigate('/notfound');\n      }\n    }\n  };\n  const navigate = useNavigate();\n  const handleCategory = () => {\n    navigate('/category');\n  };\n  // const handlePayments = () => {\n  //   navigate('/payments');\n  // };\n  const handleUser = () => {\n    navigate('/user');\n  };\n  const handleAdminPayments = () => {\n    navigate('/admin-payments');\n  };\n  const handleAdminOrders = () => {\n    navigate('/orders');\n  };\n  const handleMyOrders = () => {\n    navigate('/myorders');\n  };\n  const handleQuestions = () => {\n    navigate('/questions');\n  };\n  const handleProduct = () => {\n    navigate('/home');\n  };\n  const handleLogout = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n    navigate('/');\n    localStorage.removeItem('Token')\n    localStorage.removeItem('roles')\n    localStorage.removeItem('username')\n    localStorage.removeItem('email')\n    localStorage.removeItem('profile')\n    localStorage.removeItem('lastname');\n    localStorage.removeItem('userId');\n  };\n\n  const [editOpen, setEditOpen] = React.useState(false);\n  const handleUserClose = () => {\n    setEditOpen(false);\n  };\n\n  const[userId, setuserId] = useState();\n  const[firstName, setFirstName] = useState();\n  const[lastname, setLastname] = useState();\n  const[emailId, setEmailId] = useState();\n  const[street, setStreet] = useState();\n  const[city, setCity] = useState();\n  const[state, setState] = useState();\n const[country, setCountry] = useState();\n  const[profilePicture, setProfile] = useState(null);\n  \n  const handleEditProfile = () => {\n     \n    setEditOpen(true);\n     \n     \n     \n  };\n\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      // anchorOrigin={{\n      //   vertical: 'top',\n      //   horizontal: 'right',\n      // }}\n      id={menuId}\n      keepMounted\n      // transformOrigin={{\n      //   vertical: 'top',\n      //   horizontal: 'right',\n      // }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n    transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n    >\n      \n      {/* <MenuItem onClick={handleEditProfile}>Profile</MenuItem>\n      <Divider/> */}\n      <MenuItem onClick={handleLogout}>Log out</MenuItem>\n    </Menu>\n  );\n  const [color, setColor] = useState('default')\n  const handleClickChild = () => {\n    // if(!isLoggedIn){\n    setColor('error');\n   \n  }\n  useEffect(() => {\n\n \n\n\n\n    handleClickChild();\n  }, []);\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <Button onClick={handleProduct} sx={{ color: '#000000' }}>\n          Product\n        </Button>\n      {localStorage.getItem('roles') === 'admin' ? (\n        <>\n          <Button className={classes.root} onClick={handleUser} sx={{ color: 'white' }}>\n              Users\n            </Button>\n        </>\n      ) : (\n        ''\n      )}\n      {localStorage.getItem('roles') === 'seller' ? (\n        <>\n          <MenuItem>\n            <Button onClick={handleCategory} sx={{ color: '#000000' }}>\n              Category\n            </Button>\n          </MenuItem>\n        </>\n      ) : (\n        ''\n      )}\n\n      {/* {localStorage.getItem('roles') === 'seller' ? (\n        <>\n          <MenuItem>\n            <Button onClick={handlePayments} sx={{ color: '#000000' }}>\n              Shipping\n            </Button>\n          </MenuItem>\n        </>\n      ) : (\n        ''\n      )} */}\n</MenuItem>\n      {localStorage.getItem('roles') !== 'user' ? (\n        <>\n        </>\n      ) : (\n        <MenuItem>\n          <IconButton\n            size=\"large\"\n            aria-label=\"show 1 new notifications\"\n            color=\"inherit\"\n            onClick={handleClickOpenCart}\n          >\n            <Badge badgeContent={\n              itemCount2\n            } color={color}>\n              <AddShoppingCartIcon />\n            </Badge>\n          </IconButton>\n          <p>Cart</p>\n        </MenuItem>\n      )}\n      <MenuItem>\n        {localStorage.getItem('roles') !== 'user' ? (\n          <>\n          </>\n        ) : (\n          <Button onClick={handleMyOrders} sx={{ fontFamily: \"revert-layer\", color: '#000000' }}>\n            My Orders\n          </Button>\n        )}\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          size=\"large\"\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <Avatar src={localStorage.getItem('profile')}>\n          <img height={40} width={40} src={localStorage.getItem('profilePicture')}/>\n          </Avatar>\n        </IconButton>\n      </MenuItem>\n    </Menu>\n  );\n   \n  const handleOpenHome = () => {\n    navigate('/home');\n  }\n  return (\n    <div>\n      <Box >\n        <AppBar elevation={0} sx={{ background: '#262673', color: 'white', borderBottom:'1px solid antiquewhite'}} position=\"fixed\">\n          <Toolbar>\n            <img onClick={handleOpenHome} style={{ height: 60, width: 60, backgroundColor: 'transparent', cursor: 'pointer', display: { xs: 'none', md: 'flex' }, mr: 1 }} src={Shopping} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              fontFamily=\"cursive\"\n              fontSize={\"22px\"}\n              fontWeight={700}\n              color={\"orange\"}\n            > Online shop\n            </Typography>\n            <Typography\n              variant=\"\"\n              noWrap\n              component=\"div\"\n              sx={{ paddingLeft: 5, display: { xs: 'none', sm: 'block' } }}\n            >\n            </Typography>\n            <Box\n              component=\"form\"\n              sx={{\n                paddingLeft: 5,\n                color: 'white'\n              }}\n              noValidate\n              autoComplete=\"off\"\n            >\n            </Box>\n            <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\n            </Box>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: 'none', md: 'flex' }, color: 'white' }}>\n              <Button\n                className={classes.root}\n                onClick={handleProduct} sx={{ color: 'white' }}>\n                <Typography fontWeight={700}>Product</Typography>\n              </Button>\n              {localStorage.getItem('roles') === 'seller' ? (\n                <>\n                  <Button\n                    className={classes.root}\n                    onClick={handleCategory} sx={{ color: 'white' }}>\n                    <Typography fontWeight={700} >Category</Typography>\n                  </Button>\n                </>\n              ) : (\n                ''\n              )}\n              {/* {localStorage.getItem('roles') === 'seller' ? (\n        <>\n          <MenuItem>\n            <Button onClick={handlePayments} sx={{ color: '#000000' }}>\n              \n              <Typography fontWeight={700} >Shipping</Typography>\n            </Button>\n          </MenuItem>\n        </>\n      ) : (\n        ''\n      )} */}\n{localStorage.getItem('roles') === 'admin' ? (\n        <>\n            <Button className={classes.root} onClick={handleUser} sx={{ color: 'white' }}>\n              <Typography fontWeight={700}>Users</Typography>\n            </Button>\n        </>\n      ) : (\n        ''\n      )}\n\n{localStorage.getItem('roles') === 'admin' ? (\n        <>\n            <Button className={classes.root} onClick={handleAdminPayments} sx={{ color: 'white' }}>\n              <Typography fontWeight={700}>Payments</Typography>\n            </Button>\n        </>\n      ) : (\n        ''\n      )}\n\n{localStorage.getItem('roles') === 'admin' ? (\n        <>\n            <Button className={classes.root} onClick={handleAdminOrders} sx={{ color: 'white' }}>\n              <Typography fontWeight={700}>Orders</Typography>\n            </Button>\n        </>\n      ) : (\n        ''\n      )}\n              \n              {localStorage.getItem('roles') !== 'user' ? (\n                <>\n                </>\n              ) : (\n                <Button onClick={handleMyOrders} sx={{ fontFamily: \"revert-layer\", color: 'white' }}>\n                  <Typography fontWeight={700}>My Orders</Typography>\n                </Button>\n              )}\n              \n                {/* <Button onClick={handleQuestions} sx={{ fontFamily: \"revert-layer\", color: 'white' }}>\n                  <Typography fontWeight={700}>QUESTIONS</Typography>\n                </Button> */}\n\n                {localStorage.getItem('roles') !== 'user' ? (\n                <>\n                </>\n              ) : (\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"show 17 new notifications\"\n                  color=\"inherit\"\n                  onClick={handleClickOpenCart}\n                >\n                  <Badge\n                    badgeContent={\n                      itemCount2\n                    }\n                    color={color}>\n                    <AddShoppingCartIcon />\n                  </Badge>\n                </IconButton>\n              )}\n              <Toolbar>\n                <Typography fontWeight={700} style={{ cursor: 'pointer' }}>\n                  {localStorage.getItem('username') + ' '}{localStorage.getItem('lastname')}\n                </Typography>\n              </Toolbar>\n              <Tooltip title={localStorage.getItem('username')}>\n                <IconButton onClick={handleProfileMenuOpen} aria-controls={menuId} sx={{ p: 0 }}>\n                  {\n                    localStorage.getItem('profilePicture') ? (\n<Avatar src={localStorage.getItem('profile')}>\n                  <img height={40} width={40} src={'data:image/png;base64,' +localStorage.getItem('profilePicture')}/>\n                  </Avatar>\n                    ) : (\n                      <Avatar src={localStorage.getItem('profile')}>\n                  </Avatar>\n                    )\n                  }\n                  \n                </IconButton>\n              </Tooltip>\n              {/* <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton> */}\n            </Box>\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </Box>\n\n      \n          \n\n\n\n    </div>\n  )\n}\nexport default Navbar\n","/Users/sero6321/Desktop/kbeonlineshop/onlineshopKBE/Frontend/src/component/Product/ProductReviews.js",["254","255","256","257","258","259","260","261","262"],"\nimport ThumbUpAlt from '@mui/icons-material/ThumbUpAlt';\nimport { FormControl, Grid, Rating, Snackbar, TextField, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport * as React from 'react';\nimport axios from 'axios';\nimport { url } from '../../ServiceApi/ServiceApi';\nexport default function ProductReviews({ addCategoryModal, productId }) {\n    const [openSnack, setOpenSnack] = React.useState(false);\n    const [snackMessage, setSnackMessage] = React.useState('');\n    const [isProfileOpen, setIsProfileOpen] = React.useState(false);\n  const [fileName, setFileName] = React.useState(\"\");\n  const [review, setReview] = React.useState(\"\");\n  const [rate, setRate] = React.useState(0);\nconst handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n};\n\nfunction saveRating(rating){\n    alert(productId+\"===\" + rating.target.value);\n    setRate(rating.target.value);\n    let data = {\n      \"productId\": productId,\n      \"userId\":localStorage.getItem('userId'),\n      \"rating\": rating.target.value\n    }\n  \n    axios.post(url+'product/ratings', data\n        //, { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n        , {})\n        .then(res => {\n          });\n  }\n  \n  function saveReview(){\n    alert(productId+\"===\" + review);\n    if(review!==\"\"){\n      let data = {\n        \"productId\": productId,\n        \"userId\":localStorage.getItem('userId'),\n        \"message\": review\n      }\n    \n      axios.post(url+'product/reviews', data\n         // , { headers: { \"Authorization\": `Bearer ${localStorage.getItem('Token')}` } })\n         , {}) \n         .then(res => {\n            setSnackMessage(\"Reviews added successfully\");\n            setOpenSnack(true);\n            addCategoryModal();\n            });\n    \n    } else {\n        setSnackMessage(\"Reviews cannot be blank\");\n        setOpenSnack(true);\n    }\n    \n  \n  }\n\nfunction approveApplicationSubmit(){\n    saveReview()\n}\n\n  return (\n    <React.Fragment>\n      <div>\n        <DialogContent>\n        \n        <Typography fontSize={'1.7rem'} color={\"orange\"}>\n            \n            {/* <Rating color=\"red\" size='large' name=\"half-rating\"\n             onChange={(e)=> saveRating(e)} defaultValue={rate} precision={0.5} /> */}\n              </Typography>\n              <br></br>\n              <FormControl variant=\"outlined\" fullWidth sx={{ m: 1 }}>\n                <TextField\n                  id=\"outlined-multiline-flexible\"\n                  label=\"Add your reviews:\"\n                  multiline\n                  fullWidth\n                  value={review}\n                  onChange={(e) => setReview(e.target.value)}\n                  rows={4}\n                />\n              </FormControl> \n        </DialogContent>\n        <DialogActions align='right'>\n            <Button variant=\"contained\" color=\"primary\" \n            onClick={approveApplicationSubmit} >SUBMIT</Button>\n        </DialogActions>\n\n        <Snackbar\n          style={{ whiteSpace: 'pre-wrap', width: '300px', top: '50%', bottom: '50%', left: '40%', right: '50%' }}\n          autoHideDuration={3000}\n          anchorOrigin={{\n            vertical: \"center\",\n            horizontal: \"center\"\n          }}\n          open={openSnack}\n          onClose={handleSnackClose}\n          message={snackMessage}\n        />\n\n\n\n      </div>\n    </React.Fragment>\n  );\n}",{"ruleId":"263","severity":1,"message":"264","line":31,"column":10,"nodeType":"265","messageId":"266","endLine":31,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":43,"column":11,"nodeType":"269","messageId":"270","endLine":46,"endColumn":12},{"ruleId":"271","severity":1,"message":"272","line":116,"column":19,"nodeType":"273","endLine":116,"endColumn":120},{"ruleId":"274","severity":1,"message":"275","line":141,"column":67,"nodeType":"273","endLine":141,"endColumn":162},{"ruleId":"263","severity":1,"message":"276","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":18},{"ruleId":"263","severity":1,"message":"277","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":19},{"ruleId":"263","severity":1,"message":"278","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":19},{"ruleId":"263","severity":1,"message":"279","line":11,"column":8,"nodeType":"265","messageId":"266","endLine":11,"endColumn":16},{"ruleId":"263","severity":1,"message":"280","line":14,"column":8,"nodeType":"265","messageId":"266","endLine":14,"endColumn":22},{"ruleId":"263","severity":1,"message":"281","line":19,"column":7,"nodeType":"265","messageId":"266","endLine":19,"endColumn":10},{"ruleId":"263","severity":1,"message":"282","line":25,"column":7,"nodeType":"265","messageId":"266","endLine":25,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":77,"column":29,"nodeType":"273","endLine":77,"endColumn":117},{"ruleId":"271","severity":1,"message":"272","line":124,"column":37,"nodeType":"273","endLine":124,"endColumn":187},{"ruleId":"263","severity":1,"message":"281","line":16,"column":7,"nodeType":"265","messageId":"266","endLine":16,"endColumn":10},{"ruleId":"263","severity":1,"message":"283","line":40,"column":10,"nodeType":"265","messageId":"266","endLine":40,"endColumn":21},{"ruleId":"263","severity":1,"message":"284","line":46,"column":9,"nodeType":"265","messageId":"266","endLine":46,"endColumn":13},{"ruleId":"263","severity":1,"message":"285","line":47,"column":8,"nodeType":"265","messageId":"266","endLine":47,"endColumn":16},{"ruleId":"263","severity":1,"message":"286","line":48,"column":8,"nodeType":"265","messageId":"266","endLine":48,"endColumn":20},{"ruleId":"287","severity":1,"message":"288","line":54,"column":18,"nodeType":"289","messageId":"290","endLine":54,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":72,"column":6,"nodeType":"293","endLine":72,"endColumn":8,"suggestions":"294"},{"ruleId":"267","severity":1,"message":"268","line":77,"column":5,"nodeType":"269","messageId":"270","endLine":79,"endColumn":6},{"ruleId":"271","severity":1,"message":"272","line":136,"column":12,"nodeType":"273","endLine":136,"endColumn":48},{"ruleId":"263","severity":1,"message":"295","line":2,"column":38,"nodeType":"265","messageId":"266","endLine":2,"endColumn":51},{"ruleId":"263","severity":1,"message":"278","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":19},{"ruleId":"263","severity":1,"message":"296","line":11,"column":16,"nodeType":"265","messageId":"266","endLine":11,"endColumn":20},{"ruleId":"263","severity":1,"message":"297","line":11,"column":38,"nodeType":"265","messageId":"266","endLine":11,"endColumn":44},{"ruleId":"287","severity":1,"message":"288","line":53,"column":52,"nodeType":"289","messageId":"290","endLine":53,"endColumn":54},{"ruleId":"287","severity":1,"message":"288","line":54,"column":55,"nodeType":"289","messageId":"290","endLine":54,"endColumn":57},{"ruleId":"263","severity":1,"message":"298","line":55,"column":10,"nodeType":"265","messageId":"266","endLine":55,"endColumn":18},{"ruleId":"263","severity":1,"message":"299","line":56,"column":10,"nodeType":"265","messageId":"266","endLine":56,"endColumn":25},{"ruleId":"263","severity":1,"message":"300","line":58,"column":9,"nodeType":"265","messageId":"266","endLine":58,"endColumn":17},{"ruleId":"263","severity":1,"message":"301","line":107,"column":9,"nodeType":"265","messageId":"266","endLine":107,"endColumn":21},{"ruleId":"302","severity":1,"message":"303","line":115,"column":5,"nodeType":"304","messageId":"290","endLine":115,"endColumn":11},{"ruleId":"263","severity":1,"message":"305","line":123,"column":9,"nodeType":"265","messageId":"266","endLine":123,"endColumn":31},{"ruleId":"291","severity":1,"message":"306","line":170,"column":6,"nodeType":"293","endLine":170,"endColumn":19,"suggestions":"307"},{"ruleId":"267","severity":1,"message":"268","line":191,"column":11,"nodeType":"269","messageId":"270","endLine":194,"endColumn":12},{"ruleId":"263","severity":1,"message":"308","line":234,"column":8,"nodeType":"265","messageId":"266","endLine":234,"endColumn":25},{"ruleId":"263","severity":1,"message":"309","line":321,"column":10,"nodeType":"265","messageId":"266","endLine":321,"endColumn":24},{"ruleId":"287","severity":1,"message":"288","line":374,"column":27,"nodeType":"289","messageId":"290","endLine":374,"endColumn":29},{"ruleId":"287","severity":1,"message":"288","line":378,"column":26,"nodeType":"289","messageId":"290","endLine":378,"endColumn":28},{"ruleId":"287","severity":1,"message":"288","line":382,"column":21,"nodeType":"289","messageId":"290","endLine":382,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":386,"column":20,"nodeType":"289","messageId":"290","endLine":386,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":390,"column":21,"nodeType":"289","messageId":"290","endLine":390,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":394,"column":17,"nodeType":"289","messageId":"290","endLine":394,"endColumn":19},{"ruleId":"263","severity":1,"message":"310","line":439,"column":9,"nodeType":"265","messageId":"266","endLine":439,"endColumn":24},{"ruleId":"263","severity":1,"message":"311","line":446,"column":9,"nodeType":"265","messageId":"266","endLine":446,"endColumn":19},{"ruleId":"263","severity":1,"message":"312","line":457,"column":9,"nodeType":"265","messageId":"266","endLine":457,"endColumn":18},{"ruleId":"287","severity":1,"message":"288","line":474,"column":25,"nodeType":"289","messageId":"290","endLine":474,"endColumn":27},{"ruleId":"287","severity":1,"message":"288","line":478,"column":30,"nodeType":"289","messageId":"290","endLine":478,"endColumn":32},{"ruleId":"263","severity":1,"message":"313","line":11,"column":3,"nodeType":"265","messageId":"266","endLine":11,"endColumn":9},{"ruleId":"263","severity":1,"message":"314","line":85,"column":9,"nodeType":"265","messageId":"266","endLine":85,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":181,"column":17,"nodeType":"273","endLine":181,"endColumn":94},{"ruleId":"274","severity":1,"message":"275","line":221,"column":48,"nodeType":"273","endLine":221,"endColumn":143},{"ruleId":"263","severity":1,"message":"315","line":1,"column":27,"nodeType":"265","messageId":"266","endLine":1,"endColumn":43},{"ruleId":"263","severity":1,"message":"316","line":1,"column":8,"nodeType":"265","messageId":"266","endLine":1,"endColumn":16},{"ruleId":"263","severity":1,"message":"317","line":2,"column":38,"nodeType":"265","messageId":"266","endLine":2,"endColumn":45},{"ruleId":"263","severity":1,"message":"318","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":13},{"ruleId":"263","severity":1,"message":"319","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":17},{"ruleId":"263","severity":1,"message":"320","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":17},{"ruleId":"263","severity":1,"message":"321","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":22},{"ruleId":"263","severity":1,"message":"322","line":8,"column":8,"nodeType":"265","messageId":"266","endLine":8,"endColumn":17},{"ruleId":"263","severity":1,"message":"323","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":16},{"ruleId":"263","severity":1,"message":"324","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":13},{"ruleId":"263","severity":1,"message":"325","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":14},{"ruleId":"263","severity":1,"message":"326","line":14,"column":8,"nodeType":"265","messageId":"266","endLine":14,"endColumn":14},{"ruleId":"263","severity":1,"message":"327","line":15,"column":8,"nodeType":"265","messageId":"266","endLine":15,"endColumn":21},{"ruleId":"263","severity":1,"message":"328","line":16,"column":8,"nodeType":"265","messageId":"266","endLine":16,"endColumn":21},{"ruleId":"263","severity":1,"message":"329","line":17,"column":8,"nodeType":"265","messageId":"266","endLine":17,"endColumn":25},{"ruleId":"263","severity":1,"message":"330","line":18,"column":8,"nodeType":"265","messageId":"266","endLine":18,"endColumn":19},{"ruleId":"263","severity":1,"message":"331","line":19,"column":8,"nodeType":"265","messageId":"266","endLine":19,"endColumn":17},{"ruleId":"263","severity":1,"message":"332","line":20,"column":28,"nodeType":"265","messageId":"266","endLine":20,"endColumn":39},{"ruleId":"263","severity":1,"message":"333","line":20,"column":41,"nodeType":"265","messageId":"266","endLine":20,"endColumn":51},{"ruleId":"263","severity":1,"message":"334","line":20,"column":53,"nodeType":"265","messageId":"266","endLine":20,"endColumn":61},{"ruleId":"263","severity":1,"message":"335","line":20,"column":63,"nodeType":"265","messageId":"266","endLine":20,"endColumn":69},{"ruleId":"263","severity":1,"message":"336","line":20,"column":71,"nodeType":"265","messageId":"266","endLine":20,"endColumn":81},{"ruleId":"263","severity":1,"message":"337","line":21,"column":8,"nodeType":"265","messageId":"266","endLine":21,"endColumn":18},{"ruleId":"263","severity":1,"message":"338","line":22,"column":8,"nodeType":"265","messageId":"266","endLine":22,"endColumn":18},{"ruleId":"263","severity":1,"message":"339","line":32,"column":10,"nodeType":"265","messageId":"266","endLine":32,"endColumn":19},{"ruleId":"263","severity":1,"message":"340","line":36,"column":9,"nodeType":"265","messageId":"266","endLine":36,"endColumn":33},{"ruleId":"291","severity":1,"message":"341","line":79,"column":6,"nodeType":"293","endLine":79,"endColumn":8,"suggestions":"342"},{"ruleId":"267","severity":1,"message":"268","line":98,"column":17,"nodeType":"269","messageId":"270","endLine":100,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":116,"column":3,"nodeType":"269","messageId":"270","endLine":120,"endColumn":4},{"ruleId":"263","severity":1,"message":"343","line":126,"column":21,"nodeType":"265","messageId":"266","endLine":126,"endColumn":33},{"ruleId":"263","severity":1,"message":"344","line":133,"column":9,"nodeType":"265","messageId":"266","endLine":133,"endColumn":28},{"ruleId":"263","severity":1,"message":"345","line":171,"column":9,"nodeType":"265","messageId":"266","endLine":171,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":173,"column":16,"nodeType":"289","messageId":"290","endLine":173,"endColumn":18},{"ruleId":"263","severity":1,"message":"346","line":183,"column":13,"nodeType":"265","messageId":"266","endLine":183,"endColumn":25},{"ruleId":"263","severity":1,"message":"347","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"324","line":12,"column":8,"nodeType":"265","messageId":"266","endLine":12,"endColumn":13},{"ruleId":"263","severity":1,"message":"348","line":13,"column":10,"nodeType":"265","messageId":"266","endLine":13,"endColumn":19},{"ruleId":"263","severity":1,"message":"325","line":13,"column":31,"nodeType":"265","messageId":"266","endLine":13,"endColumn":37},{"ruleId":"263","severity":1,"message":"349","line":15,"column":8,"nodeType":"265","messageId":"266","endLine":15,"endColumn":12},{"ruleId":"263","severity":1,"message":"350","line":16,"column":8,"nodeType":"265","messageId":"266","endLine":16,"endColumn":18},{"ruleId":"263","severity":1,"message":"351","line":17,"column":8,"nodeType":"265","messageId":"266","endLine":17,"endColumn":17},{"ruleId":"263","severity":1,"message":"277","line":18,"column":8,"nodeType":"265","messageId":"266","endLine":18,"endColumn":19},{"ruleId":"263","severity":1,"message":"278","line":19,"column":8,"nodeType":"265","messageId":"266","endLine":19,"endColumn":19},{"ruleId":"263","severity":1,"message":"279","line":20,"column":8,"nodeType":"265","messageId":"266","endLine":20,"endColumn":16},{"ruleId":"263","severity":1,"message":"352","line":21,"column":8,"nodeType":"265","messageId":"266","endLine":21,"endColumn":14},{"ruleId":"263","severity":1,"message":"353","line":22,"column":10,"nodeType":"265","messageId":"266","endLine":22,"endColumn":13},{"ruleId":"263","severity":1,"message":"354","line":23,"column":8,"nodeType":"265","messageId":"266","endLine":23,"endColumn":20},{"ruleId":"263","severity":1,"message":"355","line":24,"column":8,"nodeType":"265","messageId":"266","endLine":24,"endColumn":17},{"ruleId":"263","severity":1,"message":"356","line":25,"column":8,"nodeType":"265","messageId":"266","endLine":25,"endColumn":20},{"ruleId":"263","severity":1,"message":"281","line":49,"column":9,"nodeType":"265","messageId":"266","endLine":49,"endColumn":12},{"ruleId":"263","severity":1,"message":"357","line":118,"column":12,"nodeType":"265","messageId":"266","endLine":118,"endColumn":22},{"ruleId":"263","severity":1,"message":"282","line":136,"column":19,"nodeType":"265","messageId":"266","endLine":136,"endColumn":29},{"ruleId":"263","severity":1,"message":"358","line":146,"column":20,"nodeType":"265","messageId":"266","endLine":146,"endColumn":29},{"ruleId":"263","severity":1,"message":"359","line":146,"column":31,"nodeType":"265","messageId":"266","endLine":146,"endColumn":43},{"ruleId":"263","severity":1,"message":"360","line":147,"column":19,"nodeType":"265","messageId":"266","endLine":147,"endColumn":36},{"ruleId":"263","severity":1,"message":"349","line":21,"column":10,"nodeType":"265","messageId":"266","endLine":21,"endColumn":14},{"ruleId":"263","severity":1,"message":"361","line":21,"column":22,"nodeType":"265","messageId":"266","endLine":21,"endColumn":29},{"ruleId":"263","severity":1,"message":"332","line":21,"column":31,"nodeType":"265","messageId":"266","endLine":21,"endColumn":42},{"ruleId":"263","severity":1,"message":"297","line":21,"column":44,"nodeType":"265","messageId":"266","endLine":21,"endColumn":50},{"ruleId":"263","severity":1,"message":"331","line":21,"column":52,"nodeType":"265","messageId":"266","endLine":21,"endColumn":61},{"ruleId":"291","severity":1,"message":"362","line":47,"column":7,"nodeType":"293","endLine":47,"endColumn":9,"suggestions":"363"},{"ruleId":"267","severity":1,"message":"268","line":110,"column":9,"nodeType":"269","messageId":"270","endLine":112,"endColumn":10},{"ruleId":"263","severity":1,"message":"364","line":147,"column":11,"nodeType":"265","messageId":"266","endLine":147,"endColumn":15},{"ruleId":"263","severity":1,"message":"365","line":147,"column":17,"nodeType":"265","messageId":"266","endLine":147,"endColumn":24},{"ruleId":"263","severity":1,"message":"366","line":148,"column":11,"nodeType":"265","messageId":"266","endLine":148,"endColumn":17},{"ruleId":"263","severity":1,"message":"367","line":148,"column":19,"nodeType":"265","messageId":"266","endLine":148,"endColumn":28},{"ruleId":"287","severity":1,"message":"288","line":8,"column":13,"nodeType":"289","messageId":"290","endLine":8,"endColumn":15},{"ruleId":"368","severity":1,"message":"369","line":17,"column":3,"nodeType":"370","messageId":"371","endLine":21,"endColumn":4},{"ruleId":"263","severity":1,"message":"372","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":12},{"ruleId":"271","severity":1,"message":"272","line":97,"column":11,"nodeType":"273","endLine":97,"endColumn":131},{"ruleId":"271","severity":1,"message":"272","line":132,"column":16,"nodeType":"273","endLine":132,"endColumn":68},{"ruleId":"263","severity":1,"message":"373","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":13},{"ruleId":"263","severity":1,"message":"331","line":21,"column":8,"nodeType":"265","messageId":"266","endLine":21,"endColumn":17},{"ruleId":"263","severity":1,"message":"326","line":22,"column":8,"nodeType":"265","messageId":"266","endLine":22,"endColumn":14},{"ruleId":"263","severity":1,"message":"327","line":23,"column":8,"nodeType":"265","messageId":"266","endLine":23,"endColumn":21},{"ruleId":"263","severity":1,"message":"328","line":24,"column":8,"nodeType":"265","messageId":"266","endLine":24,"endColumn":21},{"ruleId":"263","severity":1,"message":"330","line":26,"column":8,"nodeType":"265","messageId":"266","endLine":26,"endColumn":19},{"ruleId":"263","severity":1,"message":"361","line":31,"column":10,"nodeType":"265","messageId":"266","endLine":31,"endColumn":17},{"ruleId":"263","severity":1,"message":"374","line":32,"column":7,"nodeType":"265","messageId":"266","endLine":32,"endColumn":17},{"ruleId":"263","severity":1,"message":"375","line":35,"column":7,"nodeType":"265","messageId":"266","endLine":35,"endColumn":11},{"ruleId":"263","severity":1,"message":"376","line":50,"column":10,"nodeType":"265","messageId":"266","endLine":50,"endColumn":19},{"ruleId":"263","severity":1,"message":"377","line":50,"column":21,"nodeType":"265","messageId":"266","endLine":50,"endColumn":33},{"ruleId":"263","severity":1,"message":"378","line":59,"column":10,"nodeType":"265","messageId":"266","endLine":59,"endColumn":16},{"ruleId":"263","severity":1,"message":"379","line":98,"column":9,"nodeType":"265","messageId":"266","endLine":98,"endColumn":24},{"ruleId":"263","severity":1,"message":"380","line":117,"column":10,"nodeType":"265","messageId":"266","endLine":117,"endColumn":18},{"ruleId":"263","severity":1,"message":"381","line":118,"column":9,"nodeType":"265","messageId":"266","endLine":118,"endColumn":24},{"ruleId":"263","severity":1,"message":"382","line":122,"column":9,"nodeType":"265","messageId":"266","endLine":122,"endColumn":15},{"ruleId":"263","severity":1,"message":"383","line":122,"column":17,"nodeType":"265","messageId":"266","endLine":122,"endColumn":26},{"ruleId":"263","severity":1,"message":"384","line":123,"column":9,"nodeType":"265","messageId":"266","endLine":123,"endColumn":18},{"ruleId":"263","severity":1,"message":"385","line":123,"column":20,"nodeType":"265","messageId":"266","endLine":123,"endColumn":32},{"ruleId":"263","severity":1,"message":"386","line":124,"column":9,"nodeType":"265","messageId":"266","endLine":124,"endColumn":17},{"ruleId":"263","severity":1,"message":"387","line":124,"column":19,"nodeType":"265","messageId":"266","endLine":124,"endColumn":30},{"ruleId":"263","severity":1,"message":"388","line":125,"column":9,"nodeType":"265","messageId":"266","endLine":125,"endColumn":16},{"ruleId":"263","severity":1,"message":"389","line":125,"column":18,"nodeType":"265","messageId":"266","endLine":125,"endColumn":28},{"ruleId":"263","severity":1,"message":"390","line":126,"column":9,"nodeType":"265","messageId":"266","endLine":126,"endColumn":15},{"ruleId":"263","severity":1,"message":"391","line":126,"column":17,"nodeType":"265","messageId":"266","endLine":126,"endColumn":26},{"ruleId":"263","severity":1,"message":"392","line":127,"column":9,"nodeType":"265","messageId":"266","endLine":127,"endColumn":13},{"ruleId":"263","severity":1,"message":"393","line":127,"column":15,"nodeType":"265","messageId":"266","endLine":127,"endColumn":22},{"ruleId":"263","severity":1,"message":"394","line":128,"column":9,"nodeType":"265","messageId":"266","endLine":128,"endColumn":14},{"ruleId":"263","severity":1,"message":"395","line":128,"column":16,"nodeType":"265","messageId":"266","endLine":128,"endColumn":24},{"ruleId":"263","severity":1,"message":"396","line":129,"column":8,"nodeType":"265","messageId":"266","endLine":129,"endColumn":15},{"ruleId":"263","severity":1,"message":"397","line":129,"column":17,"nodeType":"265","messageId":"266","endLine":129,"endColumn":27},{"ruleId":"263","severity":1,"message":"398","line":130,"column":9,"nodeType":"265","messageId":"266","endLine":130,"endColumn":23},{"ruleId":"263","severity":1,"message":"399","line":130,"column":25,"nodeType":"265","messageId":"266","endLine":130,"endColumn":35},{"ruleId":"263","severity":1,"message":"400","line":132,"column":9,"nodeType":"265","messageId":"266","endLine":132,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":292,"column":11,"nodeType":"273","endLine":292,"endColumn":85},{"ruleId":"271","severity":1,"message":"272","line":307,"column":13,"nodeType":"273","endLine":307,"endColumn":189},{"ruleId":"271","severity":1,"message":"272","line":438,"column":19,"nodeType":"273","endLine":438,"endColumn":119},{"ruleId":"263","severity":1,"message":"401","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":18},{"ruleId":"263","severity":1,"message":"372","line":3,"column":23,"nodeType":"265","messageId":"266","endLine":3,"endColumn":27},{"ruleId":"263","severity":1,"message":"297","line":3,"column":29,"nodeType":"265","messageId":"266","endLine":3,"endColumn":35},{"ruleId":"263","severity":1,"message":"402","line":13,"column":12,"nodeType":"265","messageId":"266","endLine":13,"endColumn":25},{"ruleId":"263","severity":1,"message":"403","line":13,"column":27,"nodeType":"265","messageId":"266","endLine":13,"endColumn":43},{"ruleId":"263","severity":1,"message":"404","line":14,"column":10,"nodeType":"265","messageId":"266","endLine":14,"endColumn":18},{"ruleId":"263","severity":1,"message":"405","line":14,"column":20,"nodeType":"265","messageId":"266","endLine":14,"endColumn":31},{"ruleId":"263","severity":1,"message":"364","line":16,"column":10,"nodeType":"265","messageId":"266","endLine":16,"endColumn":14},{"ruleId":"263","severity":1,"message":"406","line":21,"column":10,"nodeType":"265","messageId":"266","endLine":21,"endColumn":20},"no-unused-vars","'cartCount' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'orderEmpty' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Img' is assigned a value but never used.","'ExpandMore' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'item' is assigned a value but never used.","'dateTime' is assigned a value but never used.","'totalAmount1' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orderlist'. Either include it or remove the dependency array.","ArrayExpression",["407"],"'useTransition' is defined but never used.","'Icon' is defined but never used.","'Rating' is defined but never used.","'currUser' is assigned a value but never used.","'profileEditOpen' is assigned a value but never used.","'navigate' is assigned a value but never used.","'CustomButton' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","'handleProfileEditClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllProducts' and 'isLoggedIn'. Either include them or remove the dependency array.",["408"],"'handleStockChange' is assigned a value but never used.","'updateCategory' is assigned a value but never used.","'AddtocartButton' is assigned a value but never used.","'EditButton' is assigned a value but never used.","'isapprove' is assigned a value but never used.","'MDBBtn' is defined but never used.","'passwordPattern' is assigned a value but never used.","'CircularProgress' is defined but never used.","'ReactDOM' is defined but never used.","'useMemo' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Typography' is defined but never used.","'DuitnowImg' is defined but never used.","'GrabpayImg' is defined but never used.","'orderOpen' is assigned a value but never used.","'handlePaymentDialogClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleGetCartItem'. Either include it or remove the dependency array.",["409"],"'setPayButton' is assigned a value but never used.","'handlePaymentOption' is assigned a value but never used.","'submitMyOrders' is assigned a value but never used.","'orderDetails' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'addReviews' is defined but never used.","'expanded1' is assigned a value but never used.","'setExpanded1' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'getProductById'. Either include it or remove the dependency array.",["410"],"'rate' is assigned a value but never used.","'setRate' is assigned a value but never used.","'review' is assigned a value but never used.","'setReview' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Grid' is defined but never used.","'Stack' is defined but never used.","'Transition' is assigned a value but never used.","'Item' is assigned a value but never used.","'itemCount' is assigned a value but never used.","'setitemCount' is assigned a value but never used.","'cartid' is assigned a value but never used.","'handleQuestions' is assigned a value but never used.","'editOpen' is assigned a value but never used.","'handleUserClose' is assigned a value but never used.","'userId' is assigned a value but never used.","'setuserId' is assigned a value but never used.","'firstName' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","'emailId' is assigned a value but never used.","'setEmailId' is assigned a value but never used.","'street' is assigned a value but never used.","'setStreet' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'country' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'profilePicture' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'handleEditProfile' is assigned a value but never used.","'ThumbUpAlt' is defined but never used.","'isProfileOpen' is assigned a value but never used.","'setIsProfileOpen' is assigned a value but never used.","'fileName' is assigned a value but never used.","'setFileName' is assigned a value but never used.","'saveRating' is defined but never used.",{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},"Update the dependencies array to be: [orderlist]",{"range":"419","text":"420"},"Update the dependencies array to be: [getAllProducts, isLoggedIn, searchValue]",{"range":"421","text":"422"},"Update the dependencies array to be: [handleGetCartItem]",{"range":"423","text":"424"},"Update the dependencies array to be: [getProductById]",{"range":"425","text":"426"},[2465,2467],"[orderlist]",[5346,5359],"[getAllProducts, isLoggedIn, searchValue]",[2180,2182],"[handleGetCartItem]",[1422,1424],"[getProductById]"]